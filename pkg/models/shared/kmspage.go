// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type KmsPageType string

const (
	KmsPageTypeHTML     KmsPageType = "HTML"
	KmsPageTypeMarkdown KmsPageType = "MARKDOWN"
	KmsPageTypeText     KmsPageType = "TEXT"
)

func (e KmsPageType) ToPointer() *KmsPageType {
	return &e
}
func (e *KmsPageType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HTML":
		fallthrough
	case "MARKDOWN":
		fallthrough
	case "TEXT":
		*e = KmsPageType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KmsPageType: %v", v)
	}
}

type KmsPage struct {
	CreatedAt    *time.Time     `json:"created_at,omitempty"`
	DownloadURL  string         `json:"download_url"`
	ID           *string        `json:"id,omitempty"`
	IsActive     *bool          `json:"is_active,omitempty"`
	ParentPageID *string        `json:"parent_page_id,omitempty"`
	Raw          map[string]any `json:"raw,omitempty"`
	SpaceID      string         `json:"space_id"`
	Title        string         `json:"title"`
	Type         KmsPageType    `json:"type"`
	UpdatedAt    *time.Time     `json:"updated_at,omitempty"`
	UserID       *string        `json:"user_id,omitempty"`
}

func (k KmsPage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KmsPage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *KmsPage) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *KmsPage) GetDownloadURL() string {
	if o == nil {
		return ""
	}
	return o.DownloadURL
}

func (o *KmsPage) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *KmsPage) GetIsActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsActive
}

func (o *KmsPage) GetParentPageID() *string {
	if o == nil {
		return nil
	}
	return o.ParentPageID
}

func (o *KmsPage) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *KmsPage) GetSpaceID() string {
	if o == nil {
		return ""
	}
	return o.SpaceID
}

func (o *KmsPage) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *KmsPage) GetType() KmsPageType {
	if o == nil {
		return KmsPageType("")
	}
	return o.Type
}

func (o *KmsPage) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *KmsPage) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
