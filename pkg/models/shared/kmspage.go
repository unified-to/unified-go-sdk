// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type KmsPageType string

const (
	KmsPageTypeHTML     KmsPageType = "HTML"
	KmsPageTypeMarkdown KmsPageType = "MARKDOWN"
	KmsPageTypeText     KmsPageType = "TEXT"
	KmsPageTypeOther    KmsPageType = "OTHER"
)

func (e KmsPageType) ToPointer() *KmsPageType {
	return &e
}

type KmsPage struct {
	CreatedAt    *time.Time        `json:"created_at,omitempty"`
	DownloadURL  *string           `json:"download_url,omitempty"`
	HasChildren  *bool             `json:"has_children,omitempty"`
	ID           *string           `json:"id,omitempty"`
	IsActive     *bool             `json:"is_active,omitempty"`
	Metadata     []KmsPageMetadata `json:"metadata,omitempty"`
	ParentPageID *string           `json:"parent_page_id,omitempty"`
	Raw          map[string]any    `json:"raw,omitempty"`
	SpaceID      *string           `json:"space_id,omitempty"`
	Title        string            `json:"title"`
	Type         KmsPageType       `json:"type"`
	UpdatedAt    *time.Time        `json:"updated_at,omitempty"`
	UserID       *string           `json:"user_id,omitempty"`
	WebURL       *string           `json:"web_url,omitempty"`
}

func (k KmsPage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KmsPage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, []string{"title", "type"}); err != nil {
		return err
	}
	return nil
}

func (k *KmsPage) GetCreatedAt() *time.Time {
	if k == nil {
		return nil
	}
	return k.CreatedAt
}

func (k *KmsPage) GetDownloadURL() *string {
	if k == nil {
		return nil
	}
	return k.DownloadURL
}

func (k *KmsPage) GetHasChildren() *bool {
	if k == nil {
		return nil
	}
	return k.HasChildren
}

func (k *KmsPage) GetID() *string {
	if k == nil {
		return nil
	}
	return k.ID
}

func (k *KmsPage) GetIsActive() *bool {
	if k == nil {
		return nil
	}
	return k.IsActive
}

func (k *KmsPage) GetMetadata() []KmsPageMetadata {
	if k == nil {
		return nil
	}
	return k.Metadata
}

func (k *KmsPage) GetParentPageID() *string {
	if k == nil {
		return nil
	}
	return k.ParentPageID
}

func (k *KmsPage) GetRaw() map[string]any {
	if k == nil {
		return nil
	}
	return k.Raw
}

func (k *KmsPage) GetSpaceID() *string {
	if k == nil {
		return nil
	}
	return k.SpaceID
}

func (k *KmsPage) GetTitle() string {
	if k == nil {
		return ""
	}
	return k.Title
}

func (k *KmsPage) GetType() KmsPageType {
	if k == nil {
		return KmsPageType("")
	}
	return k.Type
}

func (k *KmsPage) GetUpdatedAt() *time.Time {
	if k == nil {
		return nil
	}
	return k.UpdatedAt
}

func (k *KmsPage) GetUserID() *string {
	if k == nil {
		return nil
	}
	return k.UserID
}

func (k *KmsPage) GetWebURL() *string {
	if k == nil {
		return nil
	}
	return k.WebURL
}
