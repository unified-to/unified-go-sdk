// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TicketingNote struct {
	CreatedAt   *time.Time     `json:"created_at,omitempty"`
	CustomerID  *string        `json:"customer_id,omitempty"`
	Description *string        `json:"description,omitempty"`
	ID          *string        `json:"id,omitempty"`
	Raw         map[string]any `json:"raw,omitempty"`
	TicketID    *string        `json:"ticket_id,omitempty"`
	UpdatedAt   *time.Time     `json:"updated_at,omitempty"`
	UserID      *string        `json:"user_id,omitempty"`
}

func (t TicketingNote) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TicketingNote) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TicketingNote) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TicketingNote) GetCustomerID() *string {
	if t == nil {
		return nil
	}
	return t.CustomerID
}

func (t *TicketingNote) GetDescription() *string {
	if t == nil {
		return nil
	}
	return t.Description
}

func (t *TicketingNote) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TicketingNote) GetRaw() map[string]any {
	if t == nil {
		return nil
	}
	return t.Raw
}

func (t *TicketingNote) GetTicketID() *string {
	if t == nil {
		return nil
	}
	return t.TicketID
}

func (t *TicketingNote) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}

func (t *TicketingNote) GetUserID() *string {
	if t == nil {
		return nil
	}
	return t.UserID
}
