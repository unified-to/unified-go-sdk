// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type VerificationParameterType string

const (
	VerificationParameterTypeText           VerificationParameterType = "TEXT"
	VerificationParameterTypeNumber         VerificationParameterType = "NUMBER"
	VerificationParameterTypeMultipleChoice VerificationParameterType = "MULTIPLE_CHOICE"
	VerificationParameterTypeMultipleSelect VerificationParameterType = "MULTIPLE_SELECT"
	VerificationParameterTypeDate           VerificationParameterType = "DATE"
	VerificationParameterTypeFile           VerificationParameterType = "FILE"
)

func (e VerificationParameterType) ToPointer() *VerificationParameterType {
	return &e
}

type VerificationParameter struct {
	// valid file mime types
	FileTypes  []string `json:"file_types,omitempty"`
	ID         *string  `json:"id,omitempty"`
	IsRequired *bool    `json:"is_required,omitempty"`
	Name       string   `json:"name"`
	// options for MULTIPLE_CHOICE and MULTIPLE_SELECT
	Options        []string                   `json:"options,omitempty"`
	PublicQuestion *string                    `json:"public_question,omitempty"`
	Type           *VerificationParameterType `json:"type,omitempty"`
	// {country}-{stateprovince/territory} or just {country} 2-digit ISO codes
	ValidRegions []string `json:"valid_regions,omitempty"`
}

func (v *VerificationParameter) GetFileTypes() []string {
	if v == nil {
		return nil
	}
	return v.FileTypes
}

func (v *VerificationParameter) GetID() *string {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *VerificationParameter) GetIsRequired() *bool {
	if v == nil {
		return nil
	}
	return v.IsRequired
}

func (v *VerificationParameter) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *VerificationParameter) GetOptions() []string {
	if v == nil {
		return nil
	}
	return v.Options
}

func (v *VerificationParameter) GetPublicQuestion() *string {
	if v == nil {
		return nil
	}
	return v.PublicQuestion
}

func (v *VerificationParameter) GetType() *VerificationParameterType {
	if v == nil {
		return nil
	}
	return v.Type
}

func (v *VerificationParameter) GetValidRegions() []string {
	if v == nil {
		return nil
	}
	return v.ValidRegions
}
