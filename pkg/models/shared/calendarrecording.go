// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarRecording struct {
	CreatedAt *time.Time               `json:"created_at,omitempty"`
	EndAt     *time.Time               `json:"end_at,omitempty"`
	EventID   *string                  `json:"event_id,omitempty"`
	ExpiresAt *time.Time               `json:"expires_at,omitempty"`
	ID        *string                  `json:"id,omitempty"`
	Media     []CalendarRecordingMedia `json:"media,omitempty"`
	Raw       map[string]any           `json:"raw,omitempty"`
	StartAt   *time.Time               `json:"start_at,omitempty"`
	UpdatedAt *time.Time               `json:"updated_at,omitempty"`
	WebURL    *string                  `json:"web_url,omitempty"`
}

func (c CalendarRecording) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarRecording) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *CalendarRecording) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CalendarRecording) GetEndAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.EndAt
}

func (c *CalendarRecording) GetEventID() *string {
	if c == nil {
		return nil
	}
	return c.EventID
}

func (c *CalendarRecording) GetExpiresAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.ExpiresAt
}

func (c *CalendarRecording) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CalendarRecording) GetMedia() []CalendarRecordingMedia {
	if c == nil {
		return nil
	}
	return c.Media
}

func (c *CalendarRecording) GetRaw() map[string]any {
	if c == nil {
		return nil
	}
	return c.Raw
}

func (c *CalendarRecording) GetStartAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.StartAt
}

func (c *CalendarRecording) GetUpdatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.UpdatedAt
}

func (c *CalendarRecording) GetWebURL() *string {
	if c == nil {
		return nil
	}
	return c.WebURL
}
