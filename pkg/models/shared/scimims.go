// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ScimImsType string

const (
	ScimImsTypeAim   ScimImsType = "aim"
	ScimImsTypeQtalk ScimImsType = "qtalk"
	ScimImsTypeIcq   ScimImsType = "icq"
	ScimImsTypeXMPP  ScimImsType = "xmpp"
	ScimImsTypeMsn   ScimImsType = "msn"
	ScimImsTypeSkype ScimImsType = "skype"
	ScimImsTypeQq    ScimImsType = "qq"
	ScimImsTypeYahoo ScimImsType = "yahoo"
)

func (e ScimImsType) ToPointer() *ScimImsType {
	return &e
}

type ScimIms struct {
	Display *string      `json:"display,omitempty"`
	Primary *bool        `json:"primary,omitempty"`
	Type    *ScimImsType `json:"type,omitempty"`
	Value   *string      `json:"value,omitempty"`
}

func (o *ScimIms) GetDisplay() *string {
	if o == nil {
		return nil
	}
	return o.Display
}

func (o *ScimIms) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *ScimIms) GetType() *ScimImsType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ScimIms) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
