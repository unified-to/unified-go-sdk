// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type CrmPipeline struct {
	Active          *bool                   `json:"active,omitempty"`
	CreatedAt       *time.Time              `json:"created_at,omitempty"`
	DealProbability *bool                   `json:"deal_probability,omitempty"`
	DisplayOrder    *float64                `json:"display_order,omitempty"`
	ID              *string                 `json:"id,omitempty"`
	Name            *string                 `json:"name,omitempty"`
	Raw             *PropertyCrmPipelineRaw `json:"raw,omitempty"`
	UpdatedAt       *time.Time              `json:"updated_at,omitempty"`
}

func (o *CrmPipeline) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *CrmPipeline) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CrmPipeline) GetDealProbability() *bool {
	if o == nil {
		return nil
	}
	return o.DealProbability
}

func (o *CrmPipeline) GetDisplayOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.DisplayOrder
}

func (o *CrmPipeline) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CrmPipeline) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CrmPipeline) GetRaw() *PropertyCrmPipelineRaw {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *CrmPipeline) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
