// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type PaymentRefundStatus string

const (
	PaymentRefundStatusSucceeded PaymentRefundStatus = "SUCCEEDED"
	PaymentRefundStatusPending   PaymentRefundStatus = "PENDING"
	PaymentRefundStatusFailed    PaymentRefundStatus = "FAILED"
	PaymentRefundStatusCanceled  PaymentRefundStatus = "CANCELED"
)

func (e PaymentRefundStatus) ToPointer() *PaymentRefundStatus {
	return &e
}

type PaymentRefund struct {
	CreatedAt   *time.Time           `json:"created_at,omitempty"`
	Currency    *string              `json:"currency,omitempty"`
	ID          *string              `json:"id,omitempty"`
	Notes       *string              `json:"notes,omitempty"`
	PaymentID   string               `json:"payment_id"`
	Raw         map[string]any       `json:"raw,omitempty"`
	Reference   *string              `json:"reference,omitempty"`
	Status      *PaymentRefundStatus `json:"status,omitempty"`
	TotalAmount float64              `json:"total_amount"`
	UpdatedAt   *time.Time           `json:"updated_at,omitempty"`
}

func (p PaymentRefund) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentRefund) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"payment_id", "total_amount"}); err != nil {
		return err
	}
	return nil
}

func (p *PaymentRefund) GetCreatedAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.CreatedAt
}

func (p *PaymentRefund) GetCurrency() *string {
	if p == nil {
		return nil
	}
	return p.Currency
}

func (p *PaymentRefund) GetID() *string {
	if p == nil {
		return nil
	}
	return p.ID
}

func (p *PaymentRefund) GetNotes() *string {
	if p == nil {
		return nil
	}
	return p.Notes
}

func (p *PaymentRefund) GetPaymentID() string {
	if p == nil {
		return ""
	}
	return p.PaymentID
}

func (p *PaymentRefund) GetRaw() map[string]any {
	if p == nil {
		return nil
	}
	return p.Raw
}

func (p *PaymentRefund) GetReference() *string {
	if p == nil {
		return nil
	}
	return p.Reference
}

func (p *PaymentRefund) GetStatus() *PaymentRefundStatus {
	if p == nil {
		return nil
	}
	return p.Status
}

func (p *PaymentRefund) GetTotalAmount() float64 {
	if p == nil {
		return 0.0
	}
	return p.TotalAmount
}

func (p *PaymentRefund) GetUpdatedAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.UpdatedAt
}
