// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type LmsClass struct {
	CourseID      string         `json:"course_id"`
	CreatedAt     *time.Time     `json:"created_at,omitempty"`
	Description   *string        `json:"description,omitempty"`
	ID            *string        `json:"id,omitempty"`
	InstructorIds []string       `json:"instructor_ids,omitempty"`
	Languages     []string       `json:"languages,omitempty"`
	Media         []LmsMedia     `json:"media,omitempty"`
	Name          string         `json:"name"`
	Raw           map[string]any `json:"raw,omitempty"`
	StudentIds    []string       `json:"student_ids,omitempty"`
	UpdatedAt     *time.Time     `json:"updated_at,omitempty"`
}

func (l LmsClass) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LmsClass) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LmsClass) GetCourseID() string {
	if o == nil {
		return ""
	}
	return o.CourseID
}

func (o *LmsClass) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *LmsClass) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *LmsClass) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *LmsClass) GetInstructorIds() []string {
	if o == nil {
		return nil
	}
	return o.InstructorIds
}

func (o *LmsClass) GetLanguages() []string {
	if o == nil {
		return nil
	}
	return o.Languages
}

func (o *LmsClass) GetMedia() []LmsMedia {
	if o == nil {
		return nil
	}
	return o.Media
}

func (o *LmsClass) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *LmsClass) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *LmsClass) GetStudentIds() []string {
	if o == nil {
		return nil
	}
	return o.StudentIds
}

func (o *LmsClass) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
