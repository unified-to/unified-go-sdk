// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TicketingTicketStatus string

const (
	TicketingTicketStatusActive TicketingTicketStatus = "ACTIVE"
	TicketingTicketStatusClosed TicketingTicketStatus = "CLOSED"
)

func (e TicketingTicketStatus) ToPointer() *TicketingTicketStatus {
	return &e
}

type TicketingTicket struct {
	Category    *string                `json:"category,omitempty"`
	CategoryID  *string                `json:"category_id,omitempty"`
	ClosedAt    *time.Time             `json:"closed_at,omitempty"`
	CreatedAt   *time.Time             `json:"created_at,omitempty"`
	CustomerID  *string                `json:"customer_id,omitempty"`
	Description *string                `json:"description,omitempty"`
	ID          *string                `json:"id,omitempty"`
	Priority    *string                `json:"priority,omitempty"`
	Raw         map[string]any         `json:"raw,omitempty"`
	Source      *string                `json:"source,omitempty"`
	SourceRef   *string                `json:"source_ref,omitempty"`
	Status      *TicketingTicketStatus `json:"status,omitempty"`
	Subject     *string                `json:"subject,omitempty"`
	Tags        []string               `json:"tags,omitempty"`
	UpdatedAt   *time.Time             `json:"updated_at,omitempty"`
	URL         *string                `json:"url,omitempty"`
	UserID      *string                `json:"user_id,omitempty"`
}

func (t TicketingTicket) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TicketingTicket) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TicketingTicket) GetCategory() *string {
	if t == nil {
		return nil
	}
	return t.Category
}

func (t *TicketingTicket) GetCategoryID() *string {
	if t == nil {
		return nil
	}
	return t.CategoryID
}

func (t *TicketingTicket) GetClosedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.ClosedAt
}

func (t *TicketingTicket) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TicketingTicket) GetCustomerID() *string {
	if t == nil {
		return nil
	}
	return t.CustomerID
}

func (t *TicketingTicket) GetDescription() *string {
	if t == nil {
		return nil
	}
	return t.Description
}

func (t *TicketingTicket) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TicketingTicket) GetPriority() *string {
	if t == nil {
		return nil
	}
	return t.Priority
}

func (t *TicketingTicket) GetRaw() map[string]any {
	if t == nil {
		return nil
	}
	return t.Raw
}

func (t *TicketingTicket) GetSource() *string {
	if t == nil {
		return nil
	}
	return t.Source
}

func (t *TicketingTicket) GetSourceRef() *string {
	if t == nil {
		return nil
	}
	return t.SourceRef
}

func (t *TicketingTicket) GetStatus() *TicketingTicketStatus {
	if t == nil {
		return nil
	}
	return t.Status
}

func (t *TicketingTicket) GetSubject() *string {
	if t == nil {
		return nil
	}
	return t.Subject
}

func (t *TicketingTicket) GetTags() []string {
	if t == nil {
		return nil
	}
	return t.Tags
}

func (t *TicketingTicket) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}

func (t *TicketingTicket) GetURL() *string {
	if t == nil {
		return nil
	}
	return t.URL
}

func (t *TicketingTicket) GetUserID() *string {
	if t == nil {
		return nil
	}
	return t.UserID
}
