// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PropertyIntegrationSupportWebhookEventsUpdated string

const (
	PropertyIntegrationSupportWebhookEventsUpdatedVirtual PropertyIntegrationSupportWebhookEventsUpdated = "virtual"
	PropertyIntegrationSupportWebhookEventsUpdatedNative  PropertyIntegrationSupportWebhookEventsUpdated = "native"
)

func (e PropertyIntegrationSupportWebhookEventsUpdated) ToPointer() *PropertyIntegrationSupportWebhookEventsUpdated {
	return &e
}
func (e *PropertyIntegrationSupportWebhookEventsUpdated) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual":
		fallthrough
	case "native":
		*e = PropertyIntegrationSupportWebhookEventsUpdated(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyIntegrationSupportWebhookEventsUpdated: %v", v)
	}
}
