// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type EmploymentType string

const (
	EmploymentTypeFullTime   EmploymentType = "FULL_TIME"
	EmploymentTypePartTime   EmploymentType = "PART_TIME"
	EmploymentTypeContractor EmploymentType = "CONTRACTOR"
	EmploymentTypeIntern     EmploymentType = "INTERN"
	EmploymentTypeConsultant EmploymentType = "CONSULTANT"
	EmploymentTypeVolunteer  EmploymentType = "VOLUNTEER"
	EmploymentTypeCasual     EmploymentType = "CASUAL"
	EmploymentTypeSeasonal   EmploymentType = "SEASONAL"
	EmploymentTypeFreelance  EmploymentType = "FREELANCE"
	EmploymentTypeOther      EmploymentType = "OTHER"
)

func (e EmploymentType) ToPointer() *EmploymentType {
	return &e
}

type AtsJobStatus string

const (
	AtsJobStatusArchived AtsJobStatus = "ARCHIVED"
	AtsJobStatusPending  AtsJobStatus = "PENDING"
	AtsJobStatusDraft    AtsJobStatus = "DRAFT"
	AtsJobStatusOpen     AtsJobStatus = "OPEN"
	AtsJobStatusClosed   AtsJobStatus = "CLOSED"
)

func (e AtsJobStatus) ToPointer() *AtsJobStatus {
	return &e
}

type AtsJob struct {
	Addresses    []AtsAddress      `json:"addresses,omitempty"`
	ClosedAt     *time.Time        `json:"closed_at,omitempty"`
	CompanyID    *string           `json:"company_id,omitempty"`
	Compensation []AtsCompensation `json:"compensation,omitempty"`
	CreatedAt    *time.Time        `json:"created_at,omitempty"`
	// @deprecated Use `groups` instead
	Departments    []string        `json:"departments,omitempty"`
	Description    *string         `json:"description,omitempty"`
	EmploymentType *EmploymentType `json:"employment_type,omitempty"`
	// The departments/divisions/teams that this job belongs to
	Groups           []AtsGroup      `json:"groups,omitempty"`
	HiringManagerIds []string        `json:"hiring_manager_ids,omitempty"`
	ID               *string         `json:"id,omitempty"`
	LanguageLocale   *string         `json:"language_locale,omitempty"`
	Metadata         []AtsMetadata   `json:"metadata,omitempty"`
	Name             *string         `json:"name,omitempty"`
	NumberOfOpenings *float64        `json:"number_of_openings,omitempty"`
	Openings         []AtsJobOpening `json:"openings,omitempty"`
	// Public job postings
	Postings []AtsJobPosting `json:"postings,omitempty"`
	// URLs for pages containing public listings for the job
	PublicJobUrls []string         `json:"public_job_urls,omitempty"`
	Questions     []AtsJobQuestion `json:"questions,omitempty"`
	Raw           map[string]any   `json:"raw,omitempty"`
	RecruiterIds  []string         `json:"recruiter_ids,omitempty"`
	Remote        *bool            `json:"remote,omitempty"`
	Status        *AtsJobStatus    `json:"status,omitempty"`
	UpdatedAt     *time.Time       `json:"updated_at,omitempty"`
}

func (a AtsJob) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AtsJob) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AtsJob) GetAddresses() []AtsAddress {
	if a == nil {
		return nil
	}
	return a.Addresses
}

func (a *AtsJob) GetClosedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.ClosedAt
}

func (a *AtsJob) GetCompanyID() *string {
	if a == nil {
		return nil
	}
	return a.CompanyID
}

func (a *AtsJob) GetCompensation() []AtsCompensation {
	if a == nil {
		return nil
	}
	return a.Compensation
}

func (a *AtsJob) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AtsJob) GetDepartments() []string {
	if a == nil {
		return nil
	}
	return a.Departments
}

func (a *AtsJob) GetDescription() *string {
	if a == nil {
		return nil
	}
	return a.Description
}

func (a *AtsJob) GetEmploymentType() *EmploymentType {
	if a == nil {
		return nil
	}
	return a.EmploymentType
}

func (a *AtsJob) GetGroups() []AtsGroup {
	if a == nil {
		return nil
	}
	return a.Groups
}

func (a *AtsJob) GetHiringManagerIds() []string {
	if a == nil {
		return nil
	}
	return a.HiringManagerIds
}

func (a *AtsJob) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AtsJob) GetLanguageLocale() *string {
	if a == nil {
		return nil
	}
	return a.LanguageLocale
}

func (a *AtsJob) GetMetadata() []AtsMetadata {
	if a == nil {
		return nil
	}
	return a.Metadata
}

func (a *AtsJob) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *AtsJob) GetNumberOfOpenings() *float64 {
	if a == nil {
		return nil
	}
	return a.NumberOfOpenings
}

func (a *AtsJob) GetOpenings() []AtsJobOpening {
	if a == nil {
		return nil
	}
	return a.Openings
}

func (a *AtsJob) GetPostings() []AtsJobPosting {
	if a == nil {
		return nil
	}
	return a.Postings
}

func (a *AtsJob) GetPublicJobUrls() []string {
	if a == nil {
		return nil
	}
	return a.PublicJobUrls
}

func (a *AtsJob) GetQuestions() []AtsJobQuestion {
	if a == nil {
		return nil
	}
	return a.Questions
}

func (a *AtsJob) GetRaw() map[string]any {
	if a == nil {
		return nil
	}
	return a.Raw
}

func (a *AtsJob) GetRecruiterIds() []string {
	if a == nil {
		return nil
	}
	return a.RecruiterIds
}

func (a *AtsJob) GetRemote() *bool {
	if a == nil {
		return nil
	}
	return a.Remote
}

func (a *AtsJob) GetStatus() *AtsJobStatus {
	if a == nil {
		return nil
	}
	return a.Status
}

func (a *AtsJob) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}
