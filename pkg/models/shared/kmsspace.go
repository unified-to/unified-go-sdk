// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type KmsSpace struct {
	CreatedAt     *time.Time     `json:"created_at,omitempty"`
	Description   *string        `json:"description,omitempty"`
	ID            *string        `json:"id,omitempty"`
	IsActive      *bool          `json:"is_active,omitempty"`
	Name          string         `json:"name"`
	ParentSpaceID *string        `default:"sp" json:"parent_space_id"`
	Raw           map[string]any `json:"raw,omitempty"`
	UpdatedAt     *time.Time     `json:"updated_at,omitempty"`
	UserID        *string        `json:"user_id,omitempty"`
}

func (k KmsSpace) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KmsSpace) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *KmsSpace) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *KmsSpace) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *KmsSpace) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *KmsSpace) GetIsActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsActive
}

func (o *KmsSpace) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *KmsSpace) GetParentSpaceID() *string {
	if o == nil {
		return nil
	}
	return o.ParentSpaceID
}

func (o *KmsSpace) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *KmsSpace) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *KmsSpace) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
