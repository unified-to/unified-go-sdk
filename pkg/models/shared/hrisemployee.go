// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type EmploymentStatus string

const (
	EmploymentStatusActive   EmploymentStatus = "ACTIVE"
	EmploymentStatusInactive EmploymentStatus = "INACTIVE"
)

func (e EmploymentStatus) ToPointer() *EmploymentStatus {
	return &e
}

type HrisEmployeeEmploymentType string

const (
	HrisEmployeeEmploymentTypeFullTime   HrisEmployeeEmploymentType = "FULL_TIME"
	HrisEmployeeEmploymentTypePartTime   HrisEmployeeEmploymentType = "PART_TIME"
	HrisEmployeeEmploymentTypeContractor HrisEmployeeEmploymentType = "CONTRACTOR"
	HrisEmployeeEmploymentTypeIntern     HrisEmployeeEmploymentType = "INTERN"
	HrisEmployeeEmploymentTypeConsultant HrisEmployeeEmploymentType = "CONSULTANT"
	HrisEmployeeEmploymentTypeVolunteer  HrisEmployeeEmploymentType = "VOLUNTEER"
	HrisEmployeeEmploymentTypeCasual     HrisEmployeeEmploymentType = "CASUAL"
	HrisEmployeeEmploymentTypeSeasonal   HrisEmployeeEmploymentType = "SEASONAL"
	HrisEmployeeEmploymentTypeFreelance  HrisEmployeeEmploymentType = "FREELANCE"
	HrisEmployeeEmploymentTypeOther      HrisEmployeeEmploymentType = "OTHER"
)

func (e HrisEmployeeEmploymentType) ToPointer() *HrisEmployeeEmploymentType {
	return &e
}

type HrisEmployeeGender string

const (
	HrisEmployeeGenderMale      HrisEmployeeGender = "MALE"
	HrisEmployeeGenderFemale    HrisEmployeeGender = "FEMALE"
	HrisEmployeeGenderIntersex  HrisEmployeeGender = "INTERSEX"
	HrisEmployeeGenderTrans     HrisEmployeeGender = "TRANS"
	HrisEmployeeGenderNonBinary HrisEmployeeGender = "NON_BINARY"
)

func (e HrisEmployeeGender) ToPointer() *HrisEmployeeGender {
	return &e
}

type MaritalStatus string

const (
	MaritalStatusMarried MaritalStatus = "MARRIED"
	MaritalStatusSingle  MaritalStatus = "SINGLE"
)

func (e MaritalStatus) ToPointer() *MaritalStatus {
	return &e
}

type HrisEmployee struct {
	Address          *PropertyHrisEmployeeAddress        `json:"address,omitempty"`
	Bio              *string                             `json:"bio,omitempty"`
	CompanyID        *string                             `json:"company_id,omitempty"`
	Compensation     []HrisCompensation                  `json:"compensation,omitempty"`
	CreatedAt        *time.Time                          `json:"created_at,omitempty"`
	Currency         *string                             `json:"currency,omitempty"`
	DateOfBirth      *time.Time                          `json:"date_of_birth,omitempty"`
	Department       *string                             `json:"department,omitempty"`
	Division         *string                             `json:"division,omitempty"`
	Emails           []HrisEmail                         `json:"emails,omitempty"`
	EmployeeNumber   *string                             `json:"employee_number,omitempty"`
	EmployeeRoles    []PropertyHrisEmployeeEmployeeRoles `json:"employee_roles,omitempty"`
	EmploymentStatus *EmploymentStatus                   `json:"employment_status,omitempty"`
	EmploymentType   *HrisEmployeeEmploymentType         `json:"employment_type,omitempty"`
	FirstName        *string                             `json:"first_name,omitempty"`
	Gender           *HrisEmployeeGender                 `json:"gender,omitempty"`
	// Which groups/teams/units that this employee/user belongs to.  May not have all of the Group fields present, but should have id, name, or email.
	Groups                []HrisGroup     `json:"groups,omitempty"`
	HiredAt               *time.Time      `json:"hired_at,omitempty"`
	ID                    *string         `json:"id,omitempty"`
	ImageURL              *string         `json:"image_url,omitempty"`
	LanguageLocale        *string         `json:"language_locale,omitempty"`
	LastName              *string         `json:"last_name,omitempty"`
	Location              *string         `json:"location,omitempty"`
	Locations             []HrisLocation  `json:"locations,omitempty"`
	ManagerID             *string         `json:"manager_id,omitempty"`
	MaritalStatus         *MaritalStatus  `json:"marital_status,omitempty"`
	Metadata              []HrisMetadata  `json:"metadata,omitempty"`
	Name                  *string         `json:"name,omitempty"`
	Pronouns              *string         `json:"pronouns,omitempty"`
	Raw                   map[string]any  `json:"raw,omitempty"`
	Salutation            *string         `json:"salutation,omitempty"`
	SsnSin                *string         `json:"ssn_sin,omitempty"`
	StorageQuotaAllocated *float64        `json:"storage_quota_allocated,omitempty"`
	StorageQuotaAvailable *float64        `json:"storage_quota_available,omitempty"`
	StorageQuotaUsed      *float64        `json:"storage_quota_used,omitempty"`
	Telephones            []HrisTelephone `json:"telephones,omitempty"`
	TerminatedAt          *time.Time      `json:"terminated_at,omitempty"`
	Timezone              *string         `json:"timezone,omitempty"`
	Title                 *string         `json:"title,omitempty"`
	UpdatedAt             *time.Time      `json:"updated_at,omitempty"`
}

func (h HrisEmployee) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisEmployee) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (h *HrisEmployee) GetAddress() *PropertyHrisEmployeeAddress {
	if h == nil {
		return nil
	}
	return h.Address
}

func (h *HrisEmployee) GetBio() *string {
	if h == nil {
		return nil
	}
	return h.Bio
}

func (h *HrisEmployee) GetCompanyID() *string {
	if h == nil {
		return nil
	}
	return h.CompanyID
}

func (h *HrisEmployee) GetCompensation() []HrisCompensation {
	if h == nil {
		return nil
	}
	return h.Compensation
}

func (h *HrisEmployee) GetCreatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.CreatedAt
}

func (h *HrisEmployee) GetCurrency() *string {
	if h == nil {
		return nil
	}
	return h.Currency
}

func (h *HrisEmployee) GetDateOfBirth() *time.Time {
	if h == nil {
		return nil
	}
	return h.DateOfBirth
}

func (h *HrisEmployee) GetDepartment() *string {
	if h == nil {
		return nil
	}
	return h.Department
}

func (h *HrisEmployee) GetDivision() *string {
	if h == nil {
		return nil
	}
	return h.Division
}

func (h *HrisEmployee) GetEmails() []HrisEmail {
	if h == nil {
		return nil
	}
	return h.Emails
}

func (h *HrisEmployee) GetEmployeeNumber() *string {
	if h == nil {
		return nil
	}
	return h.EmployeeNumber
}

func (h *HrisEmployee) GetEmployeeRoles() []PropertyHrisEmployeeEmployeeRoles {
	if h == nil {
		return nil
	}
	return h.EmployeeRoles
}

func (h *HrisEmployee) GetEmploymentStatus() *EmploymentStatus {
	if h == nil {
		return nil
	}
	return h.EmploymentStatus
}

func (h *HrisEmployee) GetEmploymentType() *HrisEmployeeEmploymentType {
	if h == nil {
		return nil
	}
	return h.EmploymentType
}

func (h *HrisEmployee) GetFirstName() *string {
	if h == nil {
		return nil
	}
	return h.FirstName
}

func (h *HrisEmployee) GetGender() *HrisEmployeeGender {
	if h == nil {
		return nil
	}
	return h.Gender
}

func (h *HrisEmployee) GetGroups() []HrisGroup {
	if h == nil {
		return nil
	}
	return h.Groups
}

func (h *HrisEmployee) GetHiredAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.HiredAt
}

func (h *HrisEmployee) GetID() *string {
	if h == nil {
		return nil
	}
	return h.ID
}

func (h *HrisEmployee) GetImageURL() *string {
	if h == nil {
		return nil
	}
	return h.ImageURL
}

func (h *HrisEmployee) GetLanguageLocale() *string {
	if h == nil {
		return nil
	}
	return h.LanguageLocale
}

func (h *HrisEmployee) GetLastName() *string {
	if h == nil {
		return nil
	}
	return h.LastName
}

func (h *HrisEmployee) GetLocation() *string {
	if h == nil {
		return nil
	}
	return h.Location
}

func (h *HrisEmployee) GetLocations() []HrisLocation {
	if h == nil {
		return nil
	}
	return h.Locations
}

func (h *HrisEmployee) GetManagerID() *string {
	if h == nil {
		return nil
	}
	return h.ManagerID
}

func (h *HrisEmployee) GetMaritalStatus() *MaritalStatus {
	if h == nil {
		return nil
	}
	return h.MaritalStatus
}

func (h *HrisEmployee) GetMetadata() []HrisMetadata {
	if h == nil {
		return nil
	}
	return h.Metadata
}

func (h *HrisEmployee) GetName() *string {
	if h == nil {
		return nil
	}
	return h.Name
}

func (h *HrisEmployee) GetPronouns() *string {
	if h == nil {
		return nil
	}
	return h.Pronouns
}

func (h *HrisEmployee) GetRaw() map[string]any {
	if h == nil {
		return nil
	}
	return h.Raw
}

func (h *HrisEmployee) GetSalutation() *string {
	if h == nil {
		return nil
	}
	return h.Salutation
}

func (h *HrisEmployee) GetSsnSin() *string {
	if h == nil {
		return nil
	}
	return h.SsnSin
}

func (h *HrisEmployee) GetStorageQuotaAllocated() *float64 {
	if h == nil {
		return nil
	}
	return h.StorageQuotaAllocated
}

func (h *HrisEmployee) GetStorageQuotaAvailable() *float64 {
	if h == nil {
		return nil
	}
	return h.StorageQuotaAvailable
}

func (h *HrisEmployee) GetStorageQuotaUsed() *float64 {
	if h == nil {
		return nil
	}
	return h.StorageQuotaUsed
}

func (h *HrisEmployee) GetTelephones() []HrisTelephone {
	if h == nil {
		return nil
	}
	return h.Telephones
}

func (h *HrisEmployee) GetTerminatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.TerminatedAt
}

func (h *HrisEmployee) GetTimezone() *string {
	if h == nil {
		return nil
	}
	return h.Timezone
}

func (h *HrisEmployee) GetTitle() *string {
	if h == nil {
		return nil
	}
	return h.Title
}

func (h *HrisEmployee) GetUpdatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.UpdatedAt
}
