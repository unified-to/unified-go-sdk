// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/types"
)

// The User object represents you on the system. A user can belong to multiple workspaces (ie. organizations).
type User struct {
	CreatedAt   *types.Date       `json:"created_at,omitempty"`
	Email       *string           `json:"email,omitempty"`
	Environment *string           `json:"environment,omitempty"`
	ID          *string           `json:"id,omitempty"`
	Meta        *PropertyUserMeta `json:"meta,omitempty"`
	Name        string            `json:"name"`
	UpdatedAt   *types.Date       `json:"updated_at,omitempty"`
	WorkspaceID string            `json:"workspace_id"`
	// A list of all of the user's workspaces
	WorkspaceIds []string `json:"workspace_ids"`
}

func (o *User) GetCreatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *User) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *User) GetEnvironment() *string {
	if o == nil {
		return nil
	}
	return o.Environment
}

func (o *User) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *User) GetMeta() *PropertyUserMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *User) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *User) GetUpdatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *User) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

func (o *User) GetWorkspaceIds() []string {
	if o == nil {
		return []string{}
	}
	return o.WorkspaceIds
}
