// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HrisTelephoneType string

const (
	HrisTelephoneTypeWork   HrisTelephoneType = "WORK"
	HrisTelephoneTypeHome   HrisTelephoneType = "HOME"
	HrisTelephoneTypeOther  HrisTelephoneType = "OTHER"
	HrisTelephoneTypeFax    HrisTelephoneType = "FAX"
	HrisTelephoneTypeMobile HrisTelephoneType = "MOBILE"
)

func (e HrisTelephoneType) ToPointer() *HrisTelephoneType {
	return &e
}
func (e *HrisTelephoneType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORK":
		fallthrough
	case "HOME":
		fallthrough
	case "OTHER":
		fallthrough
	case "FAX":
		fallthrough
	case "MOBILE":
		*e = HrisTelephoneType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HrisTelephoneType: %v", v)
	}
}

type HrisTelephone struct {
	Telephone string             `json:"telephone"`
	Type      *HrisTelephoneType `json:"type,omitempty"`
}

func (o *HrisTelephone) GetTelephone() string {
	if o == nil {
		return ""
	}
	return o.Telephone
}

func (o *HrisTelephone) GetType() *HrisTelephoneType {
	if o == nil {
		return nil
	}
	return o.Type
}
