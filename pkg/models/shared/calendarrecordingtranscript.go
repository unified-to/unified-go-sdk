// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarRecordingTranscript struct {
	Attendee *PropertyCalendarRecordingTranscriptAttendee `json:"attendee,omitempty"`
	EndAt    *time.Time                                   `json:"end_at,omitempty"`
	Language *string                                      `json:"language,omitempty"`
	StartAt  *time.Time                                   `json:"start_at,omitempty"`
	Text     string                                       `json:"text"`
}

func (c CalendarRecordingTranscript) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarRecordingTranscript) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"text"}); err != nil {
		return err
	}
	return nil
}

func (c *CalendarRecordingTranscript) GetAttendee() *PropertyCalendarRecordingTranscriptAttendee {
	if c == nil {
		return nil
	}
	return c.Attendee
}

func (c *CalendarRecordingTranscript) GetEndAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.EndAt
}

func (c *CalendarRecordingTranscript) GetLanguage() *string {
	if c == nil {
		return nil
	}
	return c.Language
}

func (c *CalendarRecordingTranscript) GetStartAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.StartAt
}

func (c *CalendarRecordingTranscript) GetText() string {
	if c == nil {
		return ""
	}
	return c.Text
}
