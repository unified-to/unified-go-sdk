// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScimManagerType string

const (
	ScimManagerTypeDirect   ScimManagerType = "direct"
	ScimManagerTypeIndirect ScimManagerType = "indirect"
)

func (e ScimManagerType) ToPointer() *ScimManagerType {
	return &e
}
func (e *ScimManagerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "direct":
		fallthrough
	case "indirect":
		*e = ScimManagerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScimManagerType: %v", v)
	}
}

// ScimManager - "id" attribute of another User.
type ScimManager struct {
	DollarRef   *string          `json:"$ref,omitempty"`
	DisplayName *string          `json:"displayName,omitempty"`
	ManagerID   *string          `json:"managerId,omitempty"`
	Type        *ScimManagerType `json:"type,omitempty"`
	Value       *string          `json:"value,omitempty"`
}

func (o *ScimManager) GetDollarRef() *string {
	if o == nil {
		return nil
	}
	return o.DollarRef
}

func (o *ScimManager) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *ScimManager) GetManagerID() *string {
	if o == nil {
		return nil
	}
	return o.ManagerID
}

func (o *ScimManager) GetType() *ScimManagerType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ScimManager) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
