// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/types"
)

type WebhookObjectType string

const (
	WebhookObjectTypeAtsApplication    WebhookObjectType = "ats_application"
	WebhookObjectTypeAtsCandidate      WebhookObjectType = "ats_candidate"
	WebhookObjectTypeAtsDocument       WebhookObjectType = "ats_document"
	WebhookObjectTypeAtsInterview      WebhookObjectType = "ats_interview"
	WebhookObjectTypeAtsJob            WebhookObjectType = "ats_job"
	WebhookObjectTypeAtsScorecard      WebhookObjectType = "ats_scorecard"
	WebhookObjectTypeCrmCompany        WebhookObjectType = "crm_company"
	WebhookObjectTypeCrmContact        WebhookObjectType = "crm_contact"
	WebhookObjectTypeCrmDeal           WebhookObjectType = "crm_deal"
	WebhookObjectTypeCrmEvent          WebhookObjectType = "crm_event"
	WebhookObjectTypeCrmFile           WebhookObjectType = "crm_file"
	WebhookObjectTypeCrmLead           WebhookObjectType = "crm_lead"
	WebhookObjectTypeCrmPipeline       WebhookObjectType = "crm_pipeline"
	WebhookObjectTypeCrmTeam           WebhookObjectType = "crm_team"
	WebhookObjectTypeCrmUser           WebhookObjectType = "crm_user"
	WebhookObjectTypeEnrichCompany     WebhookObjectType = "enrich_company"
	WebhookObjectTypeEnrichPerson      WebhookObjectType = "enrich_person"
	WebhookObjectTypeHrisEmployee      WebhookObjectType = "hris_employee"
	WebhookObjectTypeHrisGroup         WebhookObjectType = "hris_group"
	WebhookObjectTypeMartechList       WebhookObjectType = "martech_list"
	WebhookObjectTypeMartechMember     WebhookObjectType = "martech_member"
	WebhookObjectTypePassthrough       WebhookObjectType = "passthrough"
	WebhookObjectTypeTicketingAgent    WebhookObjectType = "ticketing_agent"
	WebhookObjectTypeTicketingCustomer WebhookObjectType = "ticketing_customer"
	WebhookObjectTypeTicketingNote     WebhookObjectType = "ticketing_note"
	WebhookObjectTypeTicketingTicket   WebhookObjectType = "ticketing_ticket"
	WebhookObjectTypeUcAgent           WebhookObjectType = "uc_agent"
	WebhookObjectTypeUcCall            WebhookObjectType = "uc_call"
	WebhookObjectTypeUcContact         WebhookObjectType = "uc_contact"
)

func (e WebhookObjectType) ToPointer() *WebhookObjectType {
	return &e
}

func (e *WebhookObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ats_application":
		fallthrough
	case "ats_candidate":
		fallthrough
	case "ats_document":
		fallthrough
	case "ats_interview":
		fallthrough
	case "ats_job":
		fallthrough
	case "ats_scorecard":
		fallthrough
	case "crm_company":
		fallthrough
	case "crm_contact":
		fallthrough
	case "crm_deal":
		fallthrough
	case "crm_event":
		fallthrough
	case "crm_file":
		fallthrough
	case "crm_lead":
		fallthrough
	case "crm_pipeline":
		fallthrough
	case "crm_team":
		fallthrough
	case "crm_user":
		fallthrough
	case "enrich_company":
		fallthrough
	case "enrich_person":
		fallthrough
	case "hris_employee":
		fallthrough
	case "hris_group":
		fallthrough
	case "martech_list":
		fallthrough
	case "martech_member":
		fallthrough
	case "passthrough":
		fallthrough
	case "ticketing_agent":
		fallthrough
	case "ticketing_customer":
		fallthrough
	case "ticketing_note":
		fallthrough
	case "ticketing_ticket":
		fallthrough
	case "uc_agent":
		fallthrough
	case "uc_call":
		fallthrough
	case "uc_contact":
		*e = WebhookObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookObjectType: %v", v)
	}
}

// Webhook - A webhook is used to POST new/updated information to your server.
type Webhook struct {
	CheckedAt       *types.Date             `json:"checked_at,omitempty"`
	ConnectionID    string                  `json:"connection_id"`
	CreatedAt       *types.Date             `json:"created_at,omitempty"`
	Environment     *string                 `json:"environment,omitempty"`
	Events          []PropertyWebhookEvents `json:"events"`
	HookURL         string                  `json:"hook_url"`
	ID              *string                 `json:"id,omitempty"`
	IncludeRaw      *bool                   `json:"include_raw,omitempty"`
	IntegrationType string                  `json:"integration_type"`
	Interval        float64                 `json:"interval"`
	ObjectType      WebhookObjectType       `json:"object_type"`
	// integration-specific subscriptions IDs
	Subscriptions []string    `json:"subscriptions,omitempty"`
	UpdatedAt     *types.Date `json:"updated_at,omitempty"`
	WorkspaceID   string      `json:"workspace_id"`
}

func (o *Webhook) GetCheckedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.CheckedAt
}

func (o *Webhook) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *Webhook) GetCreatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Webhook) GetEnvironment() *string {
	if o == nil {
		return nil
	}
	return o.Environment
}

func (o *Webhook) GetEvents() []PropertyWebhookEvents {
	if o == nil {
		return []PropertyWebhookEvents{}
	}
	return o.Events
}

func (o *Webhook) GetHookURL() string {
	if o == nil {
		return ""
	}
	return o.HookURL
}

func (o *Webhook) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Webhook) GetIncludeRaw() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeRaw
}

func (o *Webhook) GetIntegrationType() string {
	if o == nil {
		return ""
	}
	return o.IntegrationType
}

func (o *Webhook) GetInterval() float64 {
	if o == nil {
		return 0.0
	}
	return o.Interval
}

func (o *Webhook) GetObjectType() WebhookObjectType {
	if o == nil {
		return WebhookObjectType("")
	}
	return o.ObjectType
}

func (o *Webhook) GetSubscriptions() []string {
	if o == nil {
		return nil
	}
	return o.Subscriptions
}

func (o *Webhook) GetUpdatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Webhook) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
