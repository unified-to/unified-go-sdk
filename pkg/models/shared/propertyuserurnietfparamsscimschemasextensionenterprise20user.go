// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender string

const (
	PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGenderFemale PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender = "female"
	PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGenderMale   PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender = "male"
)

func (e PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender) ToPointer() *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender {
	return &e
}
func (e *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "female":
		fallthrough
	case "male":
		*e = PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender: %v", v)
	}
}

type Level string

const (
	LevelJuniorEngineer Level = "Junior Engineer"
)

func (e Level) ToPointer() *Level {
	return &e
}
func (e *Level) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Junior Engineer":
		*e = Level(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Level: %v", v)
	}
}

type PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User struct {
	AdditionalManagers []Undefined                                                                   `json:"additionalManagers,omitempty"`
	Birthday           *time.Time                                                                    `json:"birthday,omitempty"`
	CostCenter         *string                                                                       `json:"costCenter,omitempty"`
	Department         *string                                                                       `json:"department,omitempty"`
	Division           *string                                                                       `json:"division,omitempty"`
	EmployeeNumber     *string                                                                       `json:"employeeNumber,omitempty"`
	EndDate            *time.Time                                                                    `json:"endDate,omitempty"`
	Gender             *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender          `json:"gender,omitempty"`
	Level              *Level                                                                        `json:"level,omitempty"`
	Location           *string                                                                       `json:"location,omitempty"`
	Manager            *PropertyPropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager `json:"manager,omitempty"`
	Organization       *string                                                                       `json:"organization,omitempty"`
	StartDate          *time.Time                                                                    `json:"startDate,omitempty"`
}

func (p PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetAdditionalManagers() []Undefined {
	if o == nil {
		return nil
	}
	return o.AdditionalManagers
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetBirthday() *time.Time {
	if o == nil {
		return nil
	}
	return o.Birthday
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetCostCenter() *string {
	if o == nil {
		return nil
	}
	return o.CostCenter
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetDepartment() *string {
	if o == nil {
		return nil
	}
	return o.Department
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetDivision() *string {
	if o == nil {
		return nil
	}
	return o.Division
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetEmployeeNumber() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeNumber
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetEndDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetGender() *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserGender {
	if o == nil {
		return nil
	}
	return o.Gender
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetLevel() *Level {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetManager() *PropertyPropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager {
	if o == nil {
		return nil
	}
	return o.Manager
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetOrganization() *string {
	if o == nil {
		return nil
	}
	return o.Organization
}

func (o *PropertyUserUrnIetfParamsScimSchemasExtensionEnterprise20User) GetStartDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDate
}
