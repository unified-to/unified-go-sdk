// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CommerceItem struct {
	AccountID         *string             `json:"account_id,omitempty"`
	CollectionIds     []string            `json:"collection_ids,omitempty"`
	CreatedAt         *time.Time          `json:"created_at,omitempty"`
	Description       *string             `json:"description,omitempty"`
	GlobalCode        *string             `json:"global_code,omitempty"`
	ID                *string             `json:"id,omitempty"`
	IsActive          *bool               `json:"is_active,omitempty"`
	IsTaxable         *bool               `json:"is_taxable,omitempty"`
	Media             []CommerceItemMedia `json:"media,omitempty"`
	Metadata          []CommerceMetadata  `json:"metadata,omitempty"`
	Name              *string             `json:"name,omitempty"`
	PublicDescription *string             `json:"public_description,omitempty"`
	PublicName        *string             `json:"public_name,omitempty"`
	Raw               map[string]any      `json:"raw,omitempty"`
	Slug              *string             `json:"slug,omitempty"`
	Tags              []string            `json:"tags,omitempty"`
	Type              *string             `json:"type,omitempty"`
	UpdatedAt         *time.Time          `json:"updated_at,omitempty"`
	// first variant is the default variant
	Variants   []CommerceItemVariant `json:"variants,omitempty"`
	VendorName *string               `json:"vendor_name,omitempty"`
}

func (c CommerceItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CommerceItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *CommerceItem) GetAccountID() *string {
	if c == nil {
		return nil
	}
	return c.AccountID
}

func (c *CommerceItem) GetCollectionIds() []string {
	if c == nil {
		return nil
	}
	return c.CollectionIds
}

func (c *CommerceItem) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CommerceItem) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CommerceItem) GetGlobalCode() *string {
	if c == nil {
		return nil
	}
	return c.GlobalCode
}

func (c *CommerceItem) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CommerceItem) GetIsActive() *bool {
	if c == nil {
		return nil
	}
	return c.IsActive
}

func (c *CommerceItem) GetIsTaxable() *bool {
	if c == nil {
		return nil
	}
	return c.IsTaxable
}

func (c *CommerceItem) GetMedia() []CommerceItemMedia {
	if c == nil {
		return nil
	}
	return c.Media
}

func (c *CommerceItem) GetMetadata() []CommerceMetadata {
	if c == nil {
		return nil
	}
	return c.Metadata
}

func (c *CommerceItem) GetName() *string {
	if c == nil {
		return nil
	}
	return c.Name
}

func (c *CommerceItem) GetPublicDescription() *string {
	if c == nil {
		return nil
	}
	return c.PublicDescription
}

func (c *CommerceItem) GetPublicName() *string {
	if c == nil {
		return nil
	}
	return c.PublicName
}

func (c *CommerceItem) GetRaw() map[string]any {
	if c == nil {
		return nil
	}
	return c.Raw
}

func (c *CommerceItem) GetSlug() *string {
	if c == nil {
		return nil
	}
	return c.Slug
}

func (c *CommerceItem) GetTags() []string {
	if c == nil {
		return nil
	}
	return c.Tags
}

func (c *CommerceItem) GetType() *string {
	if c == nil {
		return nil
	}
	return c.Type
}

func (c *CommerceItem) GetUpdatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.UpdatedAt
}

func (c *CommerceItem) GetVariants() []CommerceItemVariant {
	if c == nil {
		return nil
	}
	return c.Variants
}

func (c *CommerceItem) GetVendorName() *string {
	if c == nil {
		return nil
	}
	return c.VendorName
}
