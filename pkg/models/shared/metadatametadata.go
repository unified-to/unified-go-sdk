// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type MetadataMetadataFormat string

const (
	MetadataMetadataFormatText           MetadataMetadataFormat = "TEXT"
	MetadataMetadataFormatNumber         MetadataMetadataFormat = "NUMBER"
	MetadataMetadataFormatDate           MetadataMetadataFormat = "DATE"
	MetadataMetadataFormatBoolean        MetadataMetadataFormat = "BOOLEAN"
	MetadataMetadataFormatFile           MetadataMetadataFormat = "FILE"
	MetadataMetadataFormatTextarea       MetadataMetadataFormat = "TEXTAREA"
	MetadataMetadataFormatSingleSelect   MetadataMetadataFormat = "SINGLE_SELECT"
	MetadataMetadataFormatMultipleSelect MetadataMetadataFormat = "MULTIPLE_SELECT"
	MetadataMetadataFormatMeasurement    MetadataMetadataFormat = "MEASUREMENT"
	MetadataMetadataFormatPrice          MetadataMetadataFormat = "PRICE"
	MetadataMetadataFormatYesNo          MetadataMetadataFormat = "YES_NO"
	MetadataMetadataFormatCurrency       MetadataMetadataFormat = "CURRENCY"
	MetadataMetadataFormatURL            MetadataMetadataFormat = "URL"
)

func (e MetadataMetadataFormat) ToPointer() *MetadataMetadataFormat {
	return &e
}

type MetadataMetadata struct {
	CreatedAt      *time.Time              `json:"created_at,omitempty"`
	Format         *MetadataMetadataFormat `json:"format,omitempty"`
	ID             *string                 `json:"id,omitempty"`
	Name           string                  `json:"name"`
	ObjectType     string                  `json:"object_type"`
	Objects        map[string]any          `json:"objects,omitempty"`
	Options        []string                `json:"options,omitempty"`
	OriginalFormat *string                 `json:"original_format,omitempty"`
	Raw            map[string]any          `json:"raw,omitempty"`
	Slug           *string                 `json:"slug,omitempty"`
	UpdatedAt      *time.Time              `json:"updated_at,omitempty"`
}

func (m MetadataMetadata) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MetadataMetadata) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MetadataMetadata) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *MetadataMetadata) GetFormat() *MetadataMetadataFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *MetadataMetadata) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MetadataMetadata) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *MetadataMetadata) GetObjectType() string {
	if o == nil {
		return ""
	}
	return o.ObjectType
}

func (o *MetadataMetadata) GetObjects() map[string]any {
	if o == nil {
		return nil
	}
	return o.Objects
}

func (o *MetadataMetadata) GetOptions() []string {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *MetadataMetadata) GetOriginalFormat() *string {
	if o == nil {
		return nil
	}
	return o.OriginalFormat
}

func (o *MetadataMetadata) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *MetadataMetadata) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *MetadataMetadata) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
