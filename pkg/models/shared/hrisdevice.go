// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type HrisDevice struct {
	AdminUserIds       []string       `json:"admin_user_ids,omitempty"`
	AssetTag           *string        `json:"asset_tag,omitempty"`
	CreatedAt          *time.Time     `json:"created_at,omitempty"`
	HasAntivirus       *bool          `json:"has_antivirus,omitempty"`
	HasFirewall        *bool          `json:"has_firewall,omitempty"`
	HasHdEncrypted     *bool          `json:"has_hd_encrypted,omitempty"`
	HasPasswordManager *bool          `json:"has_password_manager,omitempty"`
	HasScreenlock      *bool          `json:"has_screenlock,omitempty"`
	ID                 *string        `json:"id,omitempty"`
	IsMissing          *bool          `json:"is_missing,omitempty"`
	LocationID         *string        `json:"location_id,omitempty"`
	Manufacturer       *string        `json:"manufacturer,omitempty"`
	Model              *string        `json:"model,omitempty"`
	Name               string         `json:"name"`
	Os                 *string        `json:"os,omitempty"`
	OsVersion          *string        `json:"os_version,omitempty"`
	Raw                map[string]any `json:"raw,omitempty"`
	UpdatedAt          *time.Time     `json:"updated_at,omitempty"`
	// users who have this device
	UserIds []string `json:"user_ids,omitempty"`
	Version *string  `json:"version,omitempty"`
}

func (h HrisDevice) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisDevice) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (h *HrisDevice) GetAdminUserIds() []string {
	if h == nil {
		return nil
	}
	return h.AdminUserIds
}

func (h *HrisDevice) GetAssetTag() *string {
	if h == nil {
		return nil
	}
	return h.AssetTag
}

func (h *HrisDevice) GetCreatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.CreatedAt
}

func (h *HrisDevice) GetHasAntivirus() *bool {
	if h == nil {
		return nil
	}
	return h.HasAntivirus
}

func (h *HrisDevice) GetHasFirewall() *bool {
	if h == nil {
		return nil
	}
	return h.HasFirewall
}

func (h *HrisDevice) GetHasHdEncrypted() *bool {
	if h == nil {
		return nil
	}
	return h.HasHdEncrypted
}

func (h *HrisDevice) GetHasPasswordManager() *bool {
	if h == nil {
		return nil
	}
	return h.HasPasswordManager
}

func (h *HrisDevice) GetHasScreenlock() *bool {
	if h == nil {
		return nil
	}
	return h.HasScreenlock
}

func (h *HrisDevice) GetID() *string {
	if h == nil {
		return nil
	}
	return h.ID
}

func (h *HrisDevice) GetIsMissing() *bool {
	if h == nil {
		return nil
	}
	return h.IsMissing
}

func (h *HrisDevice) GetLocationID() *string {
	if h == nil {
		return nil
	}
	return h.LocationID
}

func (h *HrisDevice) GetManufacturer() *string {
	if h == nil {
		return nil
	}
	return h.Manufacturer
}

func (h *HrisDevice) GetModel() *string {
	if h == nil {
		return nil
	}
	return h.Model
}

func (h *HrisDevice) GetName() string {
	if h == nil {
		return ""
	}
	return h.Name
}

func (h *HrisDevice) GetOs() *string {
	if h == nil {
		return nil
	}
	return h.Os
}

func (h *HrisDevice) GetOsVersion() *string {
	if h == nil {
		return nil
	}
	return h.OsVersion
}

func (h *HrisDevice) GetRaw() map[string]any {
	if h == nil {
		return nil
	}
	return h.Raw
}

func (h *HrisDevice) GetUpdatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.UpdatedAt
}

func (h *HrisDevice) GetUserIds() []string {
	if h == nil {
		return nil
	}
	return h.UserIds
}

func (h *HrisDevice) GetVersion() *string {
	if h == nil {
		return nil
	}
	return h.Version
}
