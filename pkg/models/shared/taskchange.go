// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TaskChange struct {
	CreatedAt *time.Time       `json:"created_at,omitempty"`
	ID        *string          `json:"id,omitempty"`
	Items     []TaskChangeItem `json:"items,omitempty"`
	Raw       map[string]any   `json:"raw,omitempty"`
	TaskID    *string          `json:"task_id,omitempty"`
	UpdatedAt *time.Time       `json:"updated_at,omitempty"`
	UserID    *string          `json:"user_id,omitempty"`
}

func (t TaskChange) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskChange) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *TaskChange) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TaskChange) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TaskChange) GetItems() []TaskChangeItem {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *TaskChange) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *TaskChange) GetTaskID() *string {
	if o == nil {
		return nil
	}
	return o.TaskID
}

func (o *TaskChange) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TaskChange) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
