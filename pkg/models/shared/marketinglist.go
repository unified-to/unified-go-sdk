// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

// MarketingList - Mailing List
type MarketingList struct {
	CreatedAt *string `json:"created_at,omitempty"`
	ID        *string `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	// The raw data returned by the integration for this list
	Raw       map[string]any `json:"raw,omitempty"`
	UpdatedAt *time.Time     `json:"updated_at,omitempty"`
}

func (m MarketingList) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MarketingList) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MarketingList) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *MarketingList) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MarketingList) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *MarketingList) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *MarketingList) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
