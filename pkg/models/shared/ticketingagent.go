// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/types"
)

type TicketingAgent struct {
	CreatedAt  *types.Date               `json:"created_at,omitempty"`
	Emails     []TicketingEmail          `json:"emails,omitempty"`
	ID         *string                   `json:"id,omitempty"`
	Name       *string                   `json:"name,omitempty"`
	Raw        PropertyTicketingAgentRaw `json:"raw"`
	Telephones []TicketingTelephone      `json:"telephones,omitempty"`
	UpdatedAt  *types.Date               `json:"updated_at,omitempty"`
}

func (o *TicketingAgent) GetCreatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TicketingAgent) GetEmails() []TicketingEmail {
	if o == nil {
		return nil
	}
	return o.Emails
}

func (o *TicketingAgent) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TicketingAgent) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TicketingAgent) GetRaw() PropertyTicketingAgentRaw {
	if o == nil {
		return PropertyTicketingAgentRaw{}
	}
	return o.Raw
}

func (o *TicketingAgent) GetTelephones() []TicketingTelephone {
	if o == nil {
		return nil
	}
	return o.Telephones
}

func (o *TicketingAgent) GetUpdatedAt() *types.Date {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
