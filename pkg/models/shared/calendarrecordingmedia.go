// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarRecordingMedia struct {
	Attendees             []CalendarAttendee            `json:"attendees,omitempty"`
	EndAt                 *time.Time                    `json:"end_at,omitempty"`
	Language              *string                       `json:"language,omitempty"`
	RecordingDownloadURL  *string                       `json:"recording_download_url,omitempty"`
	StartAt               *time.Time                    `json:"start_at,omitempty"`
	TranscriptDownloadURL *string                       `json:"transcript_download_url,omitempty"`
	Transcripts           []CalendarRecordingTranscript `json:"transcripts,omitempty"`
}

func (c CalendarRecordingMedia) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarRecordingMedia) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CalendarRecordingMedia) GetAttendees() []CalendarAttendee {
	if o == nil {
		return nil
	}
	return o.Attendees
}

func (o *CalendarRecordingMedia) GetEndAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndAt
}

func (o *CalendarRecordingMedia) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *CalendarRecordingMedia) GetRecordingDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.RecordingDownloadURL
}

func (o *CalendarRecordingMedia) GetStartAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartAt
}

func (o *CalendarRecordingMedia) GetTranscriptDownloadURL() *string {
	if o == nil {
		return nil
	}
	return o.TranscriptDownloadURL
}

func (o *CalendarRecordingMedia) GetTranscripts() []CalendarRecordingTranscript {
	if o == nil {
		return nil
	}
	return o.Transcripts
}
