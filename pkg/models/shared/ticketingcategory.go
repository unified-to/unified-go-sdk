// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TicketingCategory struct {
	CreatedAt   *time.Time     `json:"created_at,omitempty"`
	Description *string        `json:"description,omitempty"`
	ID          *string        `json:"id,omitempty"`
	IsActive    *bool          `json:"is_active,omitempty"`
	Name        *string        `json:"name,omitempty"`
	ParentID    *string        `json:"parent_id,omitempty"`
	Raw         map[string]any `json:"raw,omitempty"`
	UpdatedAt   *time.Time     `json:"updated_at,omitempty"`
}

func (t TicketingCategory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TicketingCategory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *TicketingCategory) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TicketingCategory) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *TicketingCategory) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TicketingCategory) GetIsActive() *bool {
	if o == nil {
		return nil
	}
	return o.IsActive
}

func (o *TicketingCategory) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TicketingCategory) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *TicketingCategory) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *TicketingCategory) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
