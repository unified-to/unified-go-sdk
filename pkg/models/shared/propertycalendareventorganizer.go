// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PropertyCalendarEventOrganizerStatus string

const (
	PropertyCalendarEventOrganizerStatusAccepted  PropertyCalendarEventOrganizerStatus = "ACCEPTED"
	PropertyCalendarEventOrganizerStatusRejected  PropertyCalendarEventOrganizerStatus = "REJECTED"
	PropertyCalendarEventOrganizerStatusTentative PropertyCalendarEventOrganizerStatus = "TENTATIVE"
)

func (e PropertyCalendarEventOrganizerStatus) ToPointer() *PropertyCalendarEventOrganizerStatus {
	return &e
}

type PropertyCalendarEventOrganizer struct {
	Email    *string                               `json:"email,omitempty"`
	Name     *string                               `json:"name,omitempty"`
	Required *bool                                 `json:"required,omitempty"`
	Status   *PropertyCalendarEventOrganizerStatus `json:"status,omitempty"`
	UserID   *string                               `json:"user_id,omitempty"`
}

func (p *PropertyCalendarEventOrganizer) GetEmail() *string {
	if p == nil {
		return nil
	}
	return p.Email
}

func (p *PropertyCalendarEventOrganizer) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PropertyCalendarEventOrganizer) GetRequired() *bool {
	if p == nil {
		return nil
	}
	return p.Required
}

func (p *PropertyCalendarEventOrganizer) GetStatus() *PropertyCalendarEventOrganizerStatus {
	if p == nil {
		return nil
	}
	return p.Status
}

func (p *PropertyCalendarEventOrganizer) GetUserID() *string {
	if p == nil {
		return nil
	}
	return p.UserID
}
