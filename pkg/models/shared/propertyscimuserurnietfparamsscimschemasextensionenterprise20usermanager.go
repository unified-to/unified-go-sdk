// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType string

const (
	PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypeDirect   PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType = "direct"
	PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypeIndirect PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType = "indirect"
)

func (e PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType) ToPointer() *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType {
	return &e
}

// PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager - "id" attribute of another User.
type PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager struct {
	DollarRef   *string                                                                       `json:"$ref,omitempty"`
	DisplayName *string                                                                       `json:"displayName,omitempty"`
	ManagerID   *string                                                                       `json:"managerId,omitempty"`
	Type        *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType `json:"type,omitempty"`
	Value       *string                                                                       `json:"value,omitempty"`
}

func (p *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetDollarRef() *string {
	if p == nil {
		return nil
	}
	return p.DollarRef
}

func (p *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetDisplayName() *string {
	if p == nil {
		return nil
	}
	return p.DisplayName
}

func (p *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetManagerID() *string {
	if p == nil {
		return nil
	}
	return p.ManagerID
}

func (p *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetType() *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetValue() *string {
	if p == nil {
		return nil
	}
	return p.Value
}
