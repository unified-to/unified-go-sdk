// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType string

const (
	PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypeDirect   PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType = "direct"
	PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerTypeIndirect PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType = "indirect"
)

func (e PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType) ToPointer() *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType {
	return &e
}
func (e *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "direct":
		fallthrough
	case "indirect":
		*e = PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType: %v", v)
	}
}

// PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager - "id" attribute of another User.
type PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager struct {
	DollarRef   *string                                                                       `json:"$ref,omitempty"`
	DisplayName *string                                                                       `json:"displayName,omitempty"`
	ManagerID   *string                                                                       `json:"managerId,omitempty"`
	Type        *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType `json:"type,omitempty"`
	Value       *string                                                                       `json:"value,omitempty"`
}

func (o *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetDollarRef() *string {
	if o == nil {
		return nil
	}
	return o.DollarRef
}

func (o *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetManagerID() *string {
	if o == nil {
		return nil
	}
	return o.ManagerID
}

func (o *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetType() *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManagerType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *PropertyScimUserUrnIetfParamsScimSchemasExtensionEnterprise20UserManager) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}
