// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Role string

const (
	RoleSystem Role = "SYSTEM"
	RoleUser   Role = "USER"
)

func (e Role) ToPointer() *Role {
	return &e
}
func (e *Role) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYSTEM":
		fallthrough
	case "USER":
		*e = Role(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Role: %v", v)
	}
}

type GenaiContent struct {
	Content string `json:"content"`
	Role    *Role  `json:"role,omitempty"`
}

func (o *GenaiContent) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *GenaiContent) GetRole() *Role {
	if o == nil {
		return nil
	}
	return o.Role
}
