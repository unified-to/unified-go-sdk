// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

// PropertyCrmEventMeeting - The meeting object, when type = meeting
type PropertyCrmEventMeeting struct {
	Description *string    `json:"description,omitempty"`
	EndAt       *time.Time `json:"end_at,omitempty"`
	StartAt     *time.Time `json:"start_at,omitempty"`
	Title       *string    `json:"title,omitempty"`
}

func (p PropertyCrmEventMeeting) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PropertyCrmEventMeeting) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PropertyCrmEventMeeting) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *PropertyCrmEventMeeting) GetEndAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.EndAt
}

func (p *PropertyCrmEventMeeting) GetStartAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.StartAt
}

func (p *PropertyCrmEventMeeting) GetTitle() *string {
	if p == nil {
		return nil
	}
	return p.Title
}
