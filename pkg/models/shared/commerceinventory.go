// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CommerceInventory struct {
	Available     float64        `json:"available"`
	ID            *string        `json:"id,omitempty"`
	ItemID        *string        `json:"item_id,omitempty"`
	ItemOptionID  *string        `json:"item_option_id,omitempty"`
	ItemVariantID *string        `json:"item_variant_id,omitempty"`
	LocationID    *string        `json:"location_id,omitempty"`
	Raw           map[string]any `json:"raw,omitempty"`
	UpdatedAt     *time.Time     `json:"updated_at,omitempty"`
}

func (c CommerceInventory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CommerceInventory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CommerceInventory) GetAvailable() float64 {
	if o == nil {
		return 0.0
	}
	return o.Available
}

func (o *CommerceInventory) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CommerceInventory) GetItemID() *string {
	if o == nil {
		return nil
	}
	return o.ItemID
}

func (o *CommerceInventory) GetItemOptionID() *string {
	if o == nil {
		return nil
	}
	return o.ItemOptionID
}

func (o *CommerceInventory) GetItemVariantID() *string {
	if o == nil {
		return nil
	}
	return o.ItemVariantID
}

func (o *CommerceInventory) GetLocationID() *string {
	if o == nil {
		return nil
	}
	return o.LocationID
}

func (o *CommerceInventory) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *CommerceInventory) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
