// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type HrisCompany struct {
	Address   *PropertyHrisCompanyAddress `json:"address,omitempty"`
	CreatedAt *time.Time                  `json:"created_at,omitempty"`
	ID        *string                     `json:"id,omitempty"`
	LegalName *string                     `json:"legal_name,omitempty"`
	Name      *string                     `json:"name,omitempty"`
	Raw       map[string]any              `json:"raw,omitempty"`
	UpdatedAt *time.Time                  `json:"updated_at,omitempty"`
}

func (h HrisCompany) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisCompany) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (h *HrisCompany) GetAddress() *PropertyHrisCompanyAddress {
	if h == nil {
		return nil
	}
	return h.Address
}

func (h *HrisCompany) GetCreatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.CreatedAt
}

func (h *HrisCompany) GetID() *string {
	if h == nil {
		return nil
	}
	return h.ID
}

func (h *HrisCompany) GetLegalName() *string {
	if h == nil {
		return nil
	}
	return h.LegalName
}

func (h *HrisCompany) GetName() *string {
	if h == nil {
		return nil
	}
	return h.Name
}

func (h *HrisCompany) GetRaw() map[string]any {
	if h == nil {
		return nil
	}
	return h.Raw
}

func (h *HrisCompany) GetUpdatedAt() *time.Time {
	if h == nil {
		return nil
	}
	return h.UpdatedAt
}
