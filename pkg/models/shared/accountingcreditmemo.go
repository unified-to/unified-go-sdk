// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type AccountingCreditmemoPaymentCollectionMethod string

const (
	AccountingCreditmemoPaymentCollectionMethodSendInvoice         AccountingCreditmemoPaymentCollectionMethod = "send_invoice"
	AccountingCreditmemoPaymentCollectionMethodChargeAutomatically AccountingCreditmemoPaymentCollectionMethod = "charge_automatically"
)

func (e AccountingCreditmemoPaymentCollectionMethod) ToPointer() *AccountingCreditmemoPaymentCollectionMethod {
	return &e
}

type AccountingCreditmemoStatus string

const (
	AccountingCreditmemoStatusDraft             AccountingCreditmemoStatus = "DRAFT"
	AccountingCreditmemoStatusVoided            AccountingCreditmemoStatus = "VOIDED"
	AccountingCreditmemoStatusAuthorized        AccountingCreditmemoStatus = "AUTHORIZED"
	AccountingCreditmemoStatusPaid              AccountingCreditmemoStatus = "PAID"
	AccountingCreditmemoStatusPartiallyPaid     AccountingCreditmemoStatus = "PARTIALLY_PAID"
	AccountingCreditmemoStatusPartiallyRefunded AccountingCreditmemoStatus = "PARTIALLY_REFUNDED"
	AccountingCreditmemoStatusRefunded          AccountingCreditmemoStatus = "REFUNDED"
)

func (e AccountingCreditmemoStatus) ToPointer() *AccountingCreditmemoStatus {
	return &e
}

type AccountingCreditmemo struct {
	Attachments             []AccountingAttachment                       `json:"attachments,omitempty"`
	BalanceAmount           *float64                                     `json:"balance_amount,omitempty"`
	CancelledAt             *time.Time                                   `json:"cancelled_at,omitempty"`
	ContactID               *string                                      `json:"contact_id,omitempty"`
	CreatedAt               *time.Time                                   `json:"created_at,omitempty"`
	CreditmemoNumber        *string                                      `json:"creditmemo_number,omitempty"`
	Currency                *string                                      `json:"currency,omitempty"`
	DiscountAmount          *float64                                     `json:"discount_amount,omitempty"`
	DueAt                   *time.Time                                   `json:"due_at,omitempty"`
	ID                      *string                                      `json:"id,omitempty"`
	Lineitems               []AccountingLineitem                         `json:"lineitems,omitempty"`
	Notes                   *string                                      `json:"notes,omitempty"`
	PaidAmount              *float64                                     `json:"paid_amount,omitempty"`
	PaidAt                  *time.Time                                   `json:"paid_at,omitempty"`
	PaymentCollectionMethod *AccountingCreditmemoPaymentCollectionMethod `json:"payment_collection_method,omitempty"`
	PostedAt                *time.Time                                   `json:"posted_at,omitempty"`
	Raw                     map[string]any                               `json:"raw,omitempty"`
	RefundAmount            *float64                                     `json:"refund_amount,omitempty"`
	RefundReason            *string                                      `json:"refund_reason,omitempty"`
	RefundedAt              *time.Time                                   `json:"refunded_at,omitempty"`
	Send                    *bool                                        `json:"send,omitempty"`
	Status                  *AccountingCreditmemoStatus                  `json:"status,omitempty"`
	TaxAmount               *float64                                     `json:"tax_amount,omitempty"`
	TotalAmount             *float64                                     `json:"total_amount,omitempty"`
	UpdatedAt               *time.Time                                   `json:"updated_at,omitempty"`
	URL                     *string                                      `json:"url,omitempty"`
}

func (a AccountingCreditmemo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountingCreditmemo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AccountingCreditmemo) GetAttachments() []AccountingAttachment {
	if a == nil {
		return nil
	}
	return a.Attachments
}

func (a *AccountingCreditmemo) GetBalanceAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.BalanceAmount
}

func (a *AccountingCreditmemo) GetCancelledAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CancelledAt
}

func (a *AccountingCreditmemo) GetContactID() *string {
	if a == nil {
		return nil
	}
	return a.ContactID
}

func (a *AccountingCreditmemo) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AccountingCreditmemo) GetCreditmemoNumber() *string {
	if a == nil {
		return nil
	}
	return a.CreditmemoNumber
}

func (a *AccountingCreditmemo) GetCurrency() *string {
	if a == nil {
		return nil
	}
	return a.Currency
}

func (a *AccountingCreditmemo) GetDiscountAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.DiscountAmount
}

func (a *AccountingCreditmemo) GetDueAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.DueAt
}

func (a *AccountingCreditmemo) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AccountingCreditmemo) GetLineitems() []AccountingLineitem {
	if a == nil {
		return nil
	}
	return a.Lineitems
}

func (a *AccountingCreditmemo) GetNotes() *string {
	if a == nil {
		return nil
	}
	return a.Notes
}

func (a *AccountingCreditmemo) GetPaidAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.PaidAmount
}

func (a *AccountingCreditmemo) GetPaidAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.PaidAt
}

func (a *AccountingCreditmemo) GetPaymentCollectionMethod() *AccountingCreditmemoPaymentCollectionMethod {
	if a == nil {
		return nil
	}
	return a.PaymentCollectionMethod
}

func (a *AccountingCreditmemo) GetPostedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.PostedAt
}

func (a *AccountingCreditmemo) GetRaw() map[string]any {
	if a == nil {
		return nil
	}
	return a.Raw
}

func (a *AccountingCreditmemo) GetRefundAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.RefundAmount
}

func (a *AccountingCreditmemo) GetRefundReason() *string {
	if a == nil {
		return nil
	}
	return a.RefundReason
}

func (a *AccountingCreditmemo) GetRefundedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.RefundedAt
}

func (a *AccountingCreditmemo) GetSend() *bool {
	if a == nil {
		return nil
	}
	return a.Send
}

func (a *AccountingCreditmemo) GetStatus() *AccountingCreditmemoStatus {
	if a == nil {
		return nil
	}
	return a.Status
}

func (a *AccountingCreditmemo) GetTaxAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.TaxAmount
}

func (a *AccountingCreditmemo) GetTotalAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.TotalAmount
}

func (a *AccountingCreditmemo) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}

func (a *AccountingCreditmemo) GetURL() *string {
	if a == nil {
		return nil
	}
	return a.URL
}
