// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type ContentType string

const (
	ContentTypeHTML     ContentType = "HTML"
	ContentTypeMarkdown ContentType = "MARKDOWN"
	ContentTypeText     ContentType = "TEXT"
	ContentTypeOther    ContentType = "OTHER"
)

func (e ContentType) ToPointer() *ContentType {
	return &e
}

type KmsCommentType string

const (
	KmsCommentTypePageInline KmsCommentType = "PAGE_INLINE"
	KmsCommentTypePage       KmsCommentType = "PAGE"
)

func (e KmsCommentType) ToPointer() *KmsCommentType {
	return &e
}

type KmsComment struct {
	Content     string          `json:"content"`
	ContentType *ContentType    `json:"content_type,omitempty"`
	CreatedAt   *time.Time      `json:"created_at,omitempty"`
	ID          *string         `json:"id,omitempty"`
	PageID      *string         `json:"page_id,omitempty"`
	ParentID    *string         `json:"parent_id,omitempty"`
	Raw         map[string]any  `json:"raw,omitempty"`
	Type        *KmsCommentType `json:"type,omitempty"`
	UpdatedAt   *time.Time      `json:"updated_at,omitempty"`
	UserID      *string         `json:"user_id,omitempty"`
}

func (k KmsComment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KmsComment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, []string{"content"}); err != nil {
		return err
	}
	return nil
}

func (k *KmsComment) GetContent() string {
	if k == nil {
		return ""
	}
	return k.Content
}

func (k *KmsComment) GetContentType() *ContentType {
	if k == nil {
		return nil
	}
	return k.ContentType
}

func (k *KmsComment) GetCreatedAt() *time.Time {
	if k == nil {
		return nil
	}
	return k.CreatedAt
}

func (k *KmsComment) GetID() *string {
	if k == nil {
		return nil
	}
	return k.ID
}

func (k *KmsComment) GetPageID() *string {
	if k == nil {
		return nil
	}
	return k.PageID
}

func (k *KmsComment) GetParentID() *string {
	if k == nil {
		return nil
	}
	return k.ParentID
}

func (k *KmsComment) GetRaw() map[string]any {
	if k == nil {
		return nil
	}
	return k.Raw
}

func (k *KmsComment) GetType() *KmsCommentType {
	if k == nil {
		return nil
	}
	return k.Type
}

func (k *KmsComment) GetUpdatedAt() *time.Time {
	if k == nil {
		return nil
	}
	return k.UpdatedAt
}

func (k *KmsComment) GetUserID() *string {
	if k == nil {
		return nil
	}
	return k.UserID
}
