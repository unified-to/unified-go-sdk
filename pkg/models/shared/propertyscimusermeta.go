// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PropertyScimUserMetaResourceType string

const (
	PropertyScimUserMetaResourceTypeUser  PropertyScimUserMetaResourceType = "User"
	PropertyScimUserMetaResourceTypeGroup PropertyScimUserMetaResourceType = "Group"
)

func (e PropertyScimUserMetaResourceType) ToPointer() *PropertyScimUserMetaResourceType {
	return &e
}

type PropertyScimUserMeta struct {
	Created      *string                           `json:"created,omitempty"`
	LastModified *string                           `json:"lastModified,omitempty"`
	Location     *string                           `json:"location,omitempty"`
	ResourceType *PropertyScimUserMetaResourceType `json:"resourceType,omitempty"`
	Version      *string                           `json:"version,omitempty"`
}

func (p *PropertyScimUserMeta) GetCreated() *string {
	if p == nil {
		return nil
	}
	return p.Created
}

func (p *PropertyScimUserMeta) GetLastModified() *string {
	if p == nil {
		return nil
	}
	return p.LastModified
}

func (p *PropertyScimUserMeta) GetLocation() *string {
	if p == nil {
		return nil
	}
	return p.Location
}

func (p *PropertyScimUserMeta) GetResourceType() *PropertyScimUserMetaResourceType {
	if p == nil {
		return nil
	}
	return p.ResourceType
}

func (p *PropertyScimUserMeta) GetVersion() *string {
	if p == nil {
		return nil
	}
	return p.Version
}
