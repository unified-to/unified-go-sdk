// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PropertyScimUserMetaResourceType string

const (
	PropertyScimUserMetaResourceTypeUser  PropertyScimUserMetaResourceType = "User"
	PropertyScimUserMetaResourceTypeGroup PropertyScimUserMetaResourceType = "Group"
)

func (e PropertyScimUserMetaResourceType) ToPointer() *PropertyScimUserMetaResourceType {
	return &e
}
func (e *PropertyScimUserMetaResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "Group":
		*e = PropertyScimUserMetaResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyScimUserMetaResourceType: %v", v)
	}
}

type PropertyScimUserMeta struct {
	Created      *string                           `json:"created,omitempty"`
	LastModified *string                           `json:"lastModified,omitempty"`
	Location     *string                           `json:"location,omitempty"`
	ResourceType *PropertyScimUserMetaResourceType `json:"resourceType,omitempty"`
	Version      *string                           `json:"version,omitempty"`
}

func (o *PropertyScimUserMeta) GetCreated() *string {
	if o == nil {
		return nil
	}
	return o.Created
}

func (o *PropertyScimUserMeta) GetLastModified() *string {
	if o == nil {
		return nil
	}
	return o.LastModified
}

func (o *PropertyScimUserMeta) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *PropertyScimUserMeta) GetResourceType() *PropertyScimUserMetaResourceType {
	if o == nil {
		return nil
	}
	return o.ResourceType
}

func (o *PropertyScimUserMeta) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}
