// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type UcRecordingTranscript struct {
	ContactID *string    `json:"contact_id,omitempty"`
	EndAt     *time.Time `json:"end_at,omitempty"`
	StartAt   *time.Time `json:"start_at,omitempty"`
	Text      string     `json:"text"`
	UserID    *string    `json:"user_id,omitempty"`
}

func (u UcRecordingTranscript) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UcRecordingTranscript) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, []string{"text"}); err != nil {
		return err
	}
	return nil
}

func (u *UcRecordingTranscript) GetContactID() *string {
	if u == nil {
		return nil
	}
	return u.ContactID
}

func (u *UcRecordingTranscript) GetEndAt() *time.Time {
	if u == nil {
		return nil
	}
	return u.EndAt
}

func (u *UcRecordingTranscript) GetStartAt() *time.Time {
	if u == nil {
		return nil
	}
	return u.StartAt
}

func (u *UcRecordingTranscript) GetText() string {
	if u == nil {
		return ""
	}
	return u.Text
}

func (u *UcRecordingTranscript) GetUserID() *string {
	if u == nil {
		return nil
	}
	return u.UserID
}
