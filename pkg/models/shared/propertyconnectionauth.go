// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

// PropertyConnectionAuth - An authentication object that represents a specific authorized user's connection to an integration.
type PropertyConnectionAuth struct {
	AccessToken    *string        `json:"access_token,omitempty"`
	APIURL         *string        `json:"api_url,omitempty"`
	AppID          *string        `json:"app_id,omitempty"`
	AuthorizeURL   *string        `json:"authorize_url,omitempty"`
	ClientID       *string        `json:"client_id,omitempty"`
	ClientSecret   *string        `json:"client_secret,omitempty"`
	ConsumerKey    *string        `json:"consumer_key,omitempty"`
	ConsumerSecret *string        `json:"consumer_secret,omitempty"`
	DevAPIKey      *string        `json:"dev_api_key,omitempty"`
	Emails         []string       `json:"emails,omitempty"`
	ExpiresIn      *float64       `json:"expires_in,omitempty"`
	ExpiryDate     *time.Time     `json:"expiry_date,omitempty"`
	Key            *string        `json:"key,omitempty"`
	Meta           map[string]any `json:"meta,omitempty"`
	Name           *string        `json:"name,omitempty"`
	// When integration.auth_type = "other", this field contains the authentication credentials in the same order as token_names
	OtherAuthInfo           []string   `json:"other_auth_info,omitempty"`
	Pem                     *string    `json:"pem,omitempty"`
	RefreshToken            *string    `json:"refresh_token,omitempty"`
	RefreshTokenExpiresDate *time.Time `json:"refresh_token_expires_date,omitempty"`
	RefreshTokenExpiresIn   *float64   `json:"refresh_token_expires_in,omitempty"`
	RefreshURL              *string    `json:"refresh_url,omitempty"`
	State                   *string    `json:"state,omitempty"`
	Token                   *string    `json:"token,omitempty"`
	TokenURL                *string    `json:"token_url,omitempty"`
	UserID                  *string    `json:"user_id,omitempty"`
}

func (p PropertyConnectionAuth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PropertyConnectionAuth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PropertyConnectionAuth) GetAccessToken() *string {
	if p == nil {
		return nil
	}
	return p.AccessToken
}

func (p *PropertyConnectionAuth) GetAPIURL() *string {
	if p == nil {
		return nil
	}
	return p.APIURL
}

func (p *PropertyConnectionAuth) GetAppID() *string {
	if p == nil {
		return nil
	}
	return p.AppID
}

func (p *PropertyConnectionAuth) GetAuthorizeURL() *string {
	if p == nil {
		return nil
	}
	return p.AuthorizeURL
}

func (p *PropertyConnectionAuth) GetClientID() *string {
	if p == nil {
		return nil
	}
	return p.ClientID
}

func (p *PropertyConnectionAuth) GetClientSecret() *string {
	if p == nil {
		return nil
	}
	return p.ClientSecret
}

func (p *PropertyConnectionAuth) GetConsumerKey() *string {
	if p == nil {
		return nil
	}
	return p.ConsumerKey
}

func (p *PropertyConnectionAuth) GetConsumerSecret() *string {
	if p == nil {
		return nil
	}
	return p.ConsumerSecret
}

func (p *PropertyConnectionAuth) GetDevAPIKey() *string {
	if p == nil {
		return nil
	}
	return p.DevAPIKey
}

func (p *PropertyConnectionAuth) GetEmails() []string {
	if p == nil {
		return nil
	}
	return p.Emails
}

func (p *PropertyConnectionAuth) GetExpiresIn() *float64 {
	if p == nil {
		return nil
	}
	return p.ExpiresIn
}

func (p *PropertyConnectionAuth) GetExpiryDate() *time.Time {
	if p == nil {
		return nil
	}
	return p.ExpiryDate
}

func (p *PropertyConnectionAuth) GetKey() *string {
	if p == nil {
		return nil
	}
	return p.Key
}

func (p *PropertyConnectionAuth) GetMeta() map[string]any {
	if p == nil {
		return nil
	}
	return p.Meta
}

func (p *PropertyConnectionAuth) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PropertyConnectionAuth) GetOtherAuthInfo() []string {
	if p == nil {
		return nil
	}
	return p.OtherAuthInfo
}

func (p *PropertyConnectionAuth) GetPem() *string {
	if p == nil {
		return nil
	}
	return p.Pem
}

func (p *PropertyConnectionAuth) GetRefreshToken() *string {
	if p == nil {
		return nil
	}
	return p.RefreshToken
}

func (p *PropertyConnectionAuth) GetRefreshTokenExpiresDate() *time.Time {
	if p == nil {
		return nil
	}
	return p.RefreshTokenExpiresDate
}

func (p *PropertyConnectionAuth) GetRefreshTokenExpiresIn() *float64 {
	if p == nil {
		return nil
	}
	return p.RefreshTokenExpiresIn
}

func (p *PropertyConnectionAuth) GetRefreshURL() *string {
	if p == nil {
		return nil
	}
	return p.RefreshURL
}

func (p *PropertyConnectionAuth) GetState() *string {
	if p == nil {
		return nil
	}
	return p.State
}

func (p *PropertyConnectionAuth) GetToken() *string {
	if p == nil {
		return nil
	}
	return p.Token
}

func (p *PropertyConnectionAuth) GetTokenURL() *string {
	if p == nil {
		return nil
	}
	return p.TokenURL
}

func (p *PropertyConnectionAuth) GetUserID() *string {
	if p == nil {
		return nil
	}
	return p.UserID
}
