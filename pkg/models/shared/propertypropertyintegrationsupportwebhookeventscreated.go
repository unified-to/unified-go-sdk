// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PropertyPropertyIntegrationSupportWebhookEventsCreated string

const (
	PropertyPropertyIntegrationSupportWebhookEventsCreatedVirtual PropertyPropertyIntegrationSupportWebhookEventsCreated = "virtual"
	PropertyPropertyIntegrationSupportWebhookEventsCreatedNative  PropertyPropertyIntegrationSupportWebhookEventsCreated = "native"
)

func (e PropertyPropertyIntegrationSupportWebhookEventsCreated) ToPointer() *PropertyPropertyIntegrationSupportWebhookEventsCreated {
	return &e
}

func (e *PropertyPropertyIntegrationSupportWebhookEventsCreated) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "virtual":
		fallthrough
	case "native":
		*e = PropertyPropertyIntegrationSupportWebhookEventsCreated(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyPropertyIntegrationSupportWebhookEventsCreated: %v", v)
	}
}
