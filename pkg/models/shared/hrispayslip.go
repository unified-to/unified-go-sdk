// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type PaymentType string

const (
	PaymentTypeDirect PaymentType = "DIRECT"
	PaymentTypeCheque PaymentType = "CHEQUE"
	PaymentTypeCash   PaymentType = "CASH"
)

func (e PaymentType) ToPointer() *PaymentType {
	return &e
}
func (e *PaymentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIRECT":
		fallthrough
	case "CHEQUE":
		fallthrough
	case "CASH":
		*e = PaymentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentType: %v", v)
	}
}

type HrisPayslipRaw struct {
}

type HrisPayslip struct {
	CompanyID   *string             `json:"company_id,omitempty"`
	CreatedAt   *time.Time          `json:"created_at,omitempty"`
	Currency    *string             `json:"currency,omitempty"`
	Details     []HrisPayslipDetail `json:"details,omitempty"`
	EndAt       *time.Time          `json:"end_at,omitempty"`
	GrossAmount *float64            `json:"gross_amount,omitempty"`
	ID          *string             `json:"id,omitempty"`
	NetAmount   *float64            `json:"net_amount,omitempty"`
	PaidAt      *time.Time          `json:"paid_at,omitempty"`
	PaymentType *PaymentType        `json:"payment_type,omitempty"`
	Raw         HrisPayslipRaw      `json:"raw"`
	StartAt     *time.Time          `json:"start_at,omitempty"`
	UpdatedAt   *time.Time          `json:"updated_at,omitempty"`
	UserID      *string             `json:"user_id,omitempty"`
}

func (h HrisPayslip) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisPayslip) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *HrisPayslip) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *HrisPayslip) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *HrisPayslip) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *HrisPayslip) GetDetails() []HrisPayslipDetail {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *HrisPayslip) GetEndAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndAt
}

func (o *HrisPayslip) GetGrossAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.GrossAmount
}

func (o *HrisPayslip) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *HrisPayslip) GetNetAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.NetAmount
}

func (o *HrisPayslip) GetPaidAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.PaidAt
}

func (o *HrisPayslip) GetPaymentType() *PaymentType {
	if o == nil {
		return nil
	}
	return o.PaymentType
}

func (o *HrisPayslip) GetRaw() HrisPayslipRaw {
	if o == nil {
		return HrisPayslipRaw{}
	}
	return o.Raw
}

func (o *HrisPayslip) GetStartAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartAt
}

func (o *HrisPayslip) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *HrisPayslip) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
