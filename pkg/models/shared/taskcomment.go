// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TaskComment struct {
	CreatedAt *time.Time     `json:"created_at,omitempty"`
	ID        *string        `json:"id,omitempty"`
	Raw       map[string]any `json:"raw,omitempty"`
	TaskID    string         `json:"task_id"`
	Text      string         `json:"text"`
	UpdatedAt *time.Time     `json:"updated_at,omitempty"`
	UserID    *string        `json:"user_id,omitempty"`
	UserName  *string        `json:"user_name,omitempty"`
}

func (t TaskComment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskComment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"task_id", "text"}); err != nil {
		return err
	}
	return nil
}

func (t *TaskComment) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TaskComment) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TaskComment) GetRaw() map[string]any {
	if t == nil {
		return nil
	}
	return t.Raw
}

func (t *TaskComment) GetTaskID() string {
	if t == nil {
		return ""
	}
	return t.TaskID
}

func (t *TaskComment) GetText() string {
	if t == nil {
		return ""
	}
	return t.Text
}

func (t *TaskComment) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}

func (t *TaskComment) GetUserID() *string {
	if t == nil {
		return nil
	}
	return t.UserID
}

func (t *TaskComment) GetUserName() *string {
	if t == nil {
		return nil
	}
	return t.UserName
}
