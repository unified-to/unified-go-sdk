// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarCalendar struct {
	CreatedAt   *time.Time     `json:"created_at,omitempty"`
	Description *string        `json:"description,omitempty"`
	ID          *string        `json:"id,omitempty"`
	Name        string         `json:"name"`
	Primary     *bool          `json:"primary,omitempty"`
	Raw         map[string]any `json:"raw,omitempty"`
	Timezone    *string        `json:"timezone,omitempty"`
	UpdatedAt   *time.Time     `json:"updated_at,omitempty"`
}

func (c CalendarCalendar) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarCalendar) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (c *CalendarCalendar) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CalendarCalendar) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CalendarCalendar) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CalendarCalendar) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CalendarCalendar) GetPrimary() *bool {
	if c == nil {
		return nil
	}
	return c.Primary
}

func (c *CalendarCalendar) GetRaw() map[string]any {
	if c == nil {
		return nil
	}
	return c.Raw
}

func (c *CalendarCalendar) GetTimezone() *string {
	if c == nil {
		return nil
	}
	return c.Timezone
}

func (c *CalendarCalendar) GetUpdatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.UpdatedAt
}
