// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarCalendarRaw struct {
}

type CalendarCalendar struct {
	CreatedAt   *time.Time           `json:"created_at,omitempty"`
	Description *string              `json:"description,omitempty"`
	ID          *string              `json:"id,omitempty"`
	Name        string               `json:"name"`
	Raw         *CalendarCalendarRaw `json:"raw,omitempty"`
	Timezone    *string              `json:"timezone,omitempty"`
	UpdatedAt   *time.Time           `json:"updated_at,omitempty"`
}

func (c CalendarCalendar) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarCalendar) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CalendarCalendar) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CalendarCalendar) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CalendarCalendar) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CalendarCalendar) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CalendarCalendar) GetRaw() *CalendarCalendarRaw {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *CalendarCalendar) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

func (o *CalendarCalendar) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
