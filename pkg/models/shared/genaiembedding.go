// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type EncondingFormat string

const (
	EncondingFormatFloat   EncondingFormat = "FLOAT"
	EncondingFormatUint8   EncondingFormat = "UINT8"
	EncondingFormatInt8    EncondingFormat = "INT8"
	EncondingFormatBinary  EncondingFormat = "BINARY"
	EncondingFormatUbinary EncondingFormat = "UBINARY"
	EncondingFormatBase64  EncondingFormat = "BASE64"
)

func (e EncondingFormat) ToPointer() *EncondingFormat {
	return &e
}

type GenaiEmbedding struct {
	Content         []GenaiEmbeddingContent `json:"content,omitempty"`
	Dimension       *float64                `json:"dimension,omitempty"`
	Embeddings      *string                 `json:"embeddings,omitempty"`
	EncondingFormat *EncondingFormat        `json:"enconding_format,omitempty"`
	ID              *string                 `json:"id,omitempty"`
	MaxTokens       *float64                `json:"max_tokens,omitempty"`
	ModelID         *string                 `json:"model_id,omitempty"`
	Raw             map[string]any          `json:"raw,omitempty"`
	TokensUsed      *float64                `json:"tokens_used,omitempty"`
	Type            *string                 `json:"type,omitempty"`
}

func (g *GenaiEmbedding) GetContent() []GenaiEmbeddingContent {
	if g == nil {
		return nil
	}
	return g.Content
}

func (g *GenaiEmbedding) GetDimension() *float64 {
	if g == nil {
		return nil
	}
	return g.Dimension
}

func (g *GenaiEmbedding) GetEmbeddings() *string {
	if g == nil {
		return nil
	}
	return g.Embeddings
}

func (g *GenaiEmbedding) GetEncondingFormat() *EncondingFormat {
	if g == nil {
		return nil
	}
	return g.EncondingFormat
}

func (g *GenaiEmbedding) GetID() *string {
	if g == nil {
		return nil
	}
	return g.ID
}

func (g *GenaiEmbedding) GetMaxTokens() *float64 {
	if g == nil {
		return nil
	}
	return g.MaxTokens
}

func (g *GenaiEmbedding) GetModelID() *string {
	if g == nil {
		return nil
	}
	return g.ModelID
}

func (g *GenaiEmbedding) GetRaw() map[string]any {
	if g == nil {
		return nil
	}
	return g.Raw
}

func (g *GenaiEmbedding) GetTokensUsed() *float64 {
	if g == nil {
		return nil
	}
	return g.TokensUsed
}

func (g *GenaiEmbedding) GetType() *string {
	if g == nil {
		return nil
	}
	return g.Type
}
