// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type TaskTaskStatus string

const (
	TaskTaskStatusOpened     TaskTaskStatus = "OPENED"
	TaskTaskStatusInProgress TaskTaskStatus = "IN_PROGRESS"
	TaskTaskStatusCompleted  TaskTaskStatus = "COMPLETED"
)

func (e TaskTaskStatus) ToPointer() *TaskTaskStatus {
	return &e
}

type TaskTask struct {
	AssignedUserIds []string `json:"assigned_user_ids,omitempty"`
	// Array of attachment IDs retrieved from StorageFile.Get endpoint
	AttachmentIds   []string        `json:"attachment_ids,omitempty"`
	CompletedAt     *time.Time      `json:"completed_at,omitempty"`
	CreatedAt       *time.Time      `json:"created_at,omitempty"`
	CreatorUserID   *string         `json:"creator_user_id,omitempty"`
	DueAt           *time.Time      `json:"due_at,omitempty"`
	FollowerUserIds []string        `json:"follower_user_ids,omitempty"`
	GroupIds        []string        `json:"group_ids,omitempty"`
	HasChildren     *bool           `json:"has_children,omitempty"`
	ID              *string         `json:"id,omitempty"`
	Metadata        []TaskMetadata  `json:"metadata,omitempty"`
	Name            *string         `json:"name,omitempty"`
	Notes           *string         `json:"notes,omitempty"`
	ParentID        *string         `json:"parent_id,omitempty"`
	Priority        *string         `json:"priority,omitempty"`
	ProjectID       *string         `json:"project_id,omitempty"`
	Raw             map[string]any  `json:"raw,omitempty"`
	Status          *TaskTaskStatus `json:"status,omitempty"`
	Tags            []string        `json:"tags,omitempty"`
	UpdatedAt       *time.Time      `json:"updated_at,omitempty"`
	URL             *string         `json:"url,omitempty"`
}

func (t TaskTask) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskTask) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaskTask) GetAssignedUserIds() []string {
	if o == nil {
		return nil
	}
	return o.AssignedUserIds
}

func (o *TaskTask) GetAttachmentIds() []string {
	if o == nil {
		return nil
	}
	return o.AttachmentIds
}

func (o *TaskTask) GetCompletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedAt
}

func (o *TaskTask) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *TaskTask) GetCreatorUserID() *string {
	if o == nil {
		return nil
	}
	return o.CreatorUserID
}

func (o *TaskTask) GetDueAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DueAt
}

func (o *TaskTask) GetFollowerUserIds() []string {
	if o == nil {
		return nil
	}
	return o.FollowerUserIds
}

func (o *TaskTask) GetGroupIds() []string {
	if o == nil {
		return nil
	}
	return o.GroupIds
}

func (o *TaskTask) GetHasChildren() *bool {
	if o == nil {
		return nil
	}
	return o.HasChildren
}

func (o *TaskTask) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TaskTask) GetMetadata() []TaskMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *TaskTask) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TaskTask) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *TaskTask) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *TaskTask) GetPriority() *string {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *TaskTask) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *TaskTask) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *TaskTask) GetStatus() *TaskTaskStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *TaskTask) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *TaskTask) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TaskTask) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}
