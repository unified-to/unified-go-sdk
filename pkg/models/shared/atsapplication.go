// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type AtsApplicationStatus string

const (
	AtsApplicationStatusNew             AtsApplicationStatus = "NEW"
	AtsApplicationStatusReviewing       AtsApplicationStatus = "REVIEWING"
	AtsApplicationStatusScreening       AtsApplicationStatus = "SCREENING"
	AtsApplicationStatusSubmitted       AtsApplicationStatus = "SUBMITTED"
	AtsApplicationStatusFirstInterview  AtsApplicationStatus = "FIRST_INTERVIEW"
	AtsApplicationStatusSecondInterview AtsApplicationStatus = "SECOND_INTERVIEW"
	AtsApplicationStatusThirdInterview  AtsApplicationStatus = "THIRD_INTERVIEW"
	AtsApplicationStatusBackgroundCheck AtsApplicationStatus = "BACKGROUND_CHECK"
	AtsApplicationStatusOffered         AtsApplicationStatus = "OFFERED"
	AtsApplicationStatusAccepted        AtsApplicationStatus = "ACCEPTED"
	AtsApplicationStatusHired           AtsApplicationStatus = "HIRED"
	AtsApplicationStatusRejected        AtsApplicationStatus = "REJECTED"
	AtsApplicationStatusDeclined        AtsApplicationStatus = "DECLINED"
	AtsApplicationStatusWithdrawn       AtsApplicationStatus = "WITHDRAWN"
)

func (e AtsApplicationStatus) ToPointer() *AtsApplicationStatus {
	return &e
}
func (e *AtsApplicationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW":
		fallthrough
	case "REVIEWING":
		fallthrough
	case "SCREENING":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "FIRST_INTERVIEW":
		fallthrough
	case "SECOND_INTERVIEW":
		fallthrough
	case "THIRD_INTERVIEW":
		fallthrough
	case "BACKGROUND_CHECK":
		fallthrough
	case "OFFERED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "HIRED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "DECLINED":
		fallthrough
	case "WITHDRAWN":
		*e = AtsApplicationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AtsApplicationStatus: %v", v)
	}
}

type AtsApplication struct {
	Answers        []AtsApplicationAnswer `json:"answers,omitempty"`
	AppliedAt      *time.Time             `json:"applied_at,omitempty"`
	CandidateID    *string                `json:"candidate_id,omitempty"`
	CreatedAt      *time.Time             `json:"created_at,omitempty"`
	HiredAt        *time.Time             `json:"hired_at,omitempty"`
	ID             *string                `json:"id,omitempty"`
	JobID          *string                `json:"job_id,omitempty"`
	Metadata       []AtsMetadata          `json:"metadata,omitempty"`
	Offers         []AtsOffer             `json:"offers,omitempty"`
	OriginalStatus *string                `json:"original_status,omitempty"`
	Raw            map[string]any         `json:"raw,omitempty"`
	RejectedAt     *time.Time             `json:"rejected_at,omitempty"`
	RejectedReason *string                `json:"rejected_reason,omitempty"`
	Source         *string                `json:"source,omitempty"`
	Status         *AtsApplicationStatus  `json:"status,omitempty"`
	UpdatedAt      *time.Time             `json:"updated_at,omitempty"`
}

func (a AtsApplication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AtsApplication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AtsApplication) GetAnswers() []AtsApplicationAnswer {
	if o == nil {
		return nil
	}
	return o.Answers
}

func (o *AtsApplication) GetAppliedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.AppliedAt
}

func (o *AtsApplication) GetCandidateID() *string {
	if o == nil {
		return nil
	}
	return o.CandidateID
}

func (o *AtsApplication) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AtsApplication) GetHiredAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.HiredAt
}

func (o *AtsApplication) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AtsApplication) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *AtsApplication) GetMetadata() []AtsMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *AtsApplication) GetOffers() []AtsOffer {
	if o == nil {
		return nil
	}
	return o.Offers
}

func (o *AtsApplication) GetOriginalStatus() *string {
	if o == nil {
		return nil
	}
	return o.OriginalStatus
}

func (o *AtsApplication) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *AtsApplication) GetRejectedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RejectedAt
}

func (o *AtsApplication) GetRejectedReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectedReason
}

func (o *AtsApplication) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *AtsApplication) GetStatus() *AtsApplicationStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *AtsApplication) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
