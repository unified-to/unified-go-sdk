// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CrmEventFormFieldType string

const (
	CrmEventFormFieldTypeText           CrmEventFormFieldType = "TEXT"
	CrmEventFormFieldTypeNumber         CrmEventFormFieldType = "NUMBER"
	CrmEventFormFieldTypeDate           CrmEventFormFieldType = "DATE"
	CrmEventFormFieldTypeBoolean        CrmEventFormFieldType = "BOOLEAN"
	CrmEventFormFieldTypeMultipleChoice CrmEventFormFieldType = "MULTIPLE_CHOICE"
	CrmEventFormFieldTypeFile           CrmEventFormFieldType = "FILE"
	CrmEventFormFieldTypeTextarea       CrmEventFormFieldType = "TEXTAREA"
	CrmEventFormFieldTypeMultipleSelect CrmEventFormFieldType = "MULTIPLE_SELECT"
	CrmEventFormFieldTypeEmail          CrmEventFormFieldType = "EMAIL"
	CrmEventFormFieldTypePhone          CrmEventFormFieldType = "PHONE"
	CrmEventFormFieldTypeYesNo          CrmEventFormFieldType = "YES_NO"
	CrmEventFormFieldTypeCurrency       CrmEventFormFieldType = "CURRENCY"
	CrmEventFormFieldTypeURL            CrmEventFormFieldType = "URL"
)

func (e CrmEventFormFieldType) ToPointer() *CrmEventFormFieldType {
	return &e
}
func (e *CrmEventFormFieldType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "DATE":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "MULTIPLE_CHOICE":
		fallthrough
	case "FILE":
		fallthrough
	case "TEXTAREA":
		fallthrough
	case "MULTIPLE_SELECT":
		fallthrough
	case "EMAIL":
		fallthrough
	case "PHONE":
		fallthrough
	case "YES_NO":
		fallthrough
	case "CURRENCY":
		fallthrough
	case "URL":
		*e = CrmEventFormFieldType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CrmEventFormFieldType: %v", v)
	}
}

type CrmEventFormField struct {
	Name     *string                `json:"name,omitempty"`
	Options  []CrmEventFormOption   `json:"options,omitempty"`
	Required *bool                  `json:"required,omitempty"`
	Type     *CrmEventFormFieldType `json:"type,omitempty"`
}

func (o *CrmEventFormField) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CrmEventFormField) GetOptions() []CrmEventFormOption {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *CrmEventFormField) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *CrmEventFormField) GetType() *CrmEventFormFieldType {
	if o == nil {
		return nil
	}
	return o.Type
}
