// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type AccountingTrialbalance struct {
	CreatedAt         *time.Time                      `json:"created_at,omitempty"`
	Currency          *string                         `json:"currency,omitempty"`
	EndAt             *time.Time                      `json:"end_at,omitempty"`
	ID                *string                         `json:"id,omitempty"`
	Name              *string                         `json:"name,omitempty"`
	Raw               map[string]any                  `json:"raw,omitempty"`
	StartAt           *time.Time                      `json:"start_at,omitempty"`
	SubItems          []AccountingTrialbalanceSubItem `json:"sub_items,omitempty"`
	TotalCreditAmount *float64                        `json:"total_credit_amount,omitempty"`
	TotalDebitAmount  *float64                        `json:"total_debit_amount,omitempty"`
	UpdatedAt         *time.Time                      `json:"updated_at,omitempty"`
}

func (a AccountingTrialbalance) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountingTrialbalance) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AccountingTrialbalance) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AccountingTrialbalance) GetCurrency() *string {
	if a == nil {
		return nil
	}
	return a.Currency
}

func (a *AccountingTrialbalance) GetEndAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.EndAt
}

func (a *AccountingTrialbalance) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AccountingTrialbalance) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *AccountingTrialbalance) GetRaw() map[string]any {
	if a == nil {
		return nil
	}
	return a.Raw
}

func (a *AccountingTrialbalance) GetStartAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.StartAt
}

func (a *AccountingTrialbalance) GetSubItems() []AccountingTrialbalanceSubItem {
	if a == nil {
		return nil
	}
	return a.SubItems
}

func (a *AccountingTrialbalance) GetTotalCreditAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.TotalCreditAmount
}

func (a *AccountingTrialbalance) GetTotalDebitAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.TotalDebitAmount
}

func (a *AccountingTrialbalance) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}
