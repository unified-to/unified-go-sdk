// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type AtsActivityType string

const (
	AtsActivityTypeNote  AtsActivityType = "NOTE"
	AtsActivityTypeTask  AtsActivityType = "TASK"
	AtsActivityTypeEmail AtsActivityType = "EMAIL"
)

func (e AtsActivityType) ToPointer() *AtsActivityType {
	return &e
}

type AtsActivity struct {
	ApplicationID *string    `json:"application_id,omitempty"`
	Bcc           []AtsEmail `json:"bcc,omitempty"`
	CandidateID   *string    `json:"candidate_id,omitempty"`
	Cc            []AtsEmail `json:"cc,omitempty"`
	CreatedAt     *time.Time `json:"created_at,omitempty"`
	Description   *string    `json:"description,omitempty"`
	DocumentID    *string    `json:"document_id,omitempty"`
	// IDs for AtsDocument.get
	DocumentIds []string                 `json:"document_ids,omitempty"`
	From        *PropertyAtsActivityFrom `json:"from,omitempty"`
	ID          *string                  `json:"id,omitempty"`
	InterviewID *string                  `json:"interview_id,omitempty"`
	IsPrivate   *bool                    `json:"is_private,omitempty"`
	JobID       *string                  `json:"job_id,omitempty"`
	Raw         map[string]any           `json:"raw,omitempty"`
	SubType     *string                  `json:"sub_type,omitempty"`
	Title       *string                  `json:"title,omitempty"`
	To          []AtsEmail               `json:"to,omitempty"`
	Type        *AtsActivityType         `json:"type,omitempty"`
	UpdatedAt   *time.Time               `json:"updated_at,omitempty"`
	// id values of the recruiters associated with the activity.
	UserIds []string `json:"user_ids,omitempty"`
}

func (a AtsActivity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AtsActivity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AtsActivity) GetApplicationID() *string {
	if a == nil {
		return nil
	}
	return a.ApplicationID
}

func (a *AtsActivity) GetBcc() []AtsEmail {
	if a == nil {
		return nil
	}
	return a.Bcc
}

func (a *AtsActivity) GetCandidateID() *string {
	if a == nil {
		return nil
	}
	return a.CandidateID
}

func (a *AtsActivity) GetCc() []AtsEmail {
	if a == nil {
		return nil
	}
	return a.Cc
}

func (a *AtsActivity) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AtsActivity) GetDescription() *string {
	if a == nil {
		return nil
	}
	return a.Description
}

func (a *AtsActivity) GetDocumentID() *string {
	if a == nil {
		return nil
	}
	return a.DocumentID
}

func (a *AtsActivity) GetDocumentIds() []string {
	if a == nil {
		return nil
	}
	return a.DocumentIds
}

func (a *AtsActivity) GetFrom() *PropertyAtsActivityFrom {
	if a == nil {
		return nil
	}
	return a.From
}

func (a *AtsActivity) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AtsActivity) GetInterviewID() *string {
	if a == nil {
		return nil
	}
	return a.InterviewID
}

func (a *AtsActivity) GetIsPrivate() *bool {
	if a == nil {
		return nil
	}
	return a.IsPrivate
}

func (a *AtsActivity) GetJobID() *string {
	if a == nil {
		return nil
	}
	return a.JobID
}

func (a *AtsActivity) GetRaw() map[string]any {
	if a == nil {
		return nil
	}
	return a.Raw
}

func (a *AtsActivity) GetSubType() *string {
	if a == nil {
		return nil
	}
	return a.SubType
}

func (a *AtsActivity) GetTitle() *string {
	if a == nil {
		return nil
	}
	return a.Title
}

func (a *AtsActivity) GetTo() []AtsEmail {
	if a == nil {
		return nil
	}
	return a.To
}

func (a *AtsActivity) GetType() *AtsActivityType {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *AtsActivity) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}

func (a *AtsActivity) GetUserIds() []string {
	if a == nil {
		return nil
	}
	return a.UserIds
}
