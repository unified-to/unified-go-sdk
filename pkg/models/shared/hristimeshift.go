// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type HrisTimeshift struct {
	ApprovedAt     *time.Time         `json:"approved_at,omitempty"`
	ApproverUserID *string            `json:"approver_user_id,omitempty"`
	CompanyID      *string            `json:"company_id,omitempty"`
	Compensation   []HrisCompensation `json:"compensation,omitempty"`
	CreatedAt      *time.Time         `json:"created_at,omitempty"`
	EmployeeUserID *string            `json:"employee_user_id,omitempty"`
	EndAt          *time.Time         `json:"end_at,omitempty"`
	GroupID        *string            `json:"group_id,omitempty"`
	Hours          *float64           `json:"hours,omitempty"`
	ID             *string            `json:"id,omitempty"`
	IsApproved     *bool              `json:"is_approved,omitempty"`
	LocationID     *string            `json:"location_id,omitempty"`
	Raw            map[string]any     `json:"raw,omitempty"`
	StartAt        *time.Time         `json:"start_at,omitempty"`
	UpdatedAt      *time.Time         `json:"updated_at,omitempty"`
}

func (h HrisTimeshift) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HrisTimeshift) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *HrisTimeshift) GetApprovedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ApprovedAt
}

func (o *HrisTimeshift) GetApproverUserID() *string {
	if o == nil {
		return nil
	}
	return o.ApproverUserID
}

func (o *HrisTimeshift) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *HrisTimeshift) GetCompensation() []HrisCompensation {
	if o == nil {
		return nil
	}
	return o.Compensation
}

func (o *HrisTimeshift) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *HrisTimeshift) GetEmployeeUserID() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeUserID
}

func (o *HrisTimeshift) GetEndAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndAt
}

func (o *HrisTimeshift) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *HrisTimeshift) GetHours() *float64 {
	if o == nil {
		return nil
	}
	return o.Hours
}

func (o *HrisTimeshift) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *HrisTimeshift) GetIsApproved() *bool {
	if o == nil {
		return nil
	}
	return o.IsApproved
}

func (o *HrisTimeshift) GetLocationID() *string {
	if o == nil {
		return nil
	}
	return o.LocationID
}

func (o *HrisTimeshift) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *HrisTimeshift) GetStartAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartAt
}

func (o *HrisTimeshift) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
