// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarBusy struct {
	Description *string        `json:"description,omitempty"`
	EndAt       time.Time      `json:"end_at"`
	ID          *string        `json:"id,omitempty"`
	Raw         map[string]any `json:"raw,omitempty"`
	StartAt     time.Time      `json:"start_at"`
	Timezone    *string        `json:"timezone,omitempty"`
}

func (c CalendarBusy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarBusy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"end_at", "start_at"}); err != nil {
		return err
	}
	return nil
}

func (c *CalendarBusy) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CalendarBusy) GetEndAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.EndAt
}

func (c *CalendarBusy) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CalendarBusy) GetRaw() map[string]any {
	if c == nil {
		return nil
	}
	return c.Raw
}

func (c *CalendarBusy) GetStartAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.StartAt
}

func (c *CalendarBusy) GetTimezone() *string {
	if c == nil {
		return nil
	}
	return c.Timezone
}
