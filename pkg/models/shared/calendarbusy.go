// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CalendarBusyRaw struct {
}

type CalendarBusy struct {
	Description *string          `json:"description,omitempty"`
	EndAt       time.Time        `json:"end_at"`
	ID          *string          `json:"id,omitempty"`
	Raw         *CalendarBusyRaw `json:"raw,omitempty"`
	StartAt     time.Time        `json:"start_at"`
	Timezone    *string          `json:"timezone,omitempty"`
}

func (c CalendarBusy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CalendarBusy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CalendarBusy) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CalendarBusy) GetEndAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndAt
}

func (o *CalendarBusy) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CalendarBusy) GetRaw() *CalendarBusyRaw {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *CalendarBusy) GetStartAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartAt
}

func (o *CalendarBusy) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}
