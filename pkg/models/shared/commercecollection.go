// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CommerceCollectionType string

const (
	CommerceCollectionTypeCollection  CommerceCollectionType = "COLLECTION"
	CommerceCollectionTypeSavedSearch CommerceCollectionType = "SAVED_SEARCH"
	CommerceCollectionTypeCategory    CommerceCollectionType = "CATEGORY"
)

func (e CommerceCollectionType) ToPointer() *CommerceCollectionType {
	return &e
}

// CommerceCollection - A collection of items/products/services
type CommerceCollection struct {
	CreatedAt         *time.Time              `json:"created_at,omitempty"`
	Description       *string                 `json:"description,omitempty"`
	ID                *string                 `json:"id,omitempty"`
	IsActive          *bool                   `json:"is_active,omitempty"`
	IsFeatured        *bool                   `json:"is_featured,omitempty"`
	IsVisible         *bool                   `json:"is_visible,omitempty"`
	Media             []CommerceItemMedia     `json:"media,omitempty"`
	Metadata          []CommerceMetadata      `json:"metadata,omitempty"`
	Name              string                  `json:"name"`
	ParentID          *string                 `json:"parent_id,omitempty"`
	PublicDescription *string                 `json:"public_description,omitempty"`
	PublicName        *string                 `json:"public_name,omitempty"`
	Raw               map[string]any          `json:"raw,omitempty"`
	Tags              []string                `json:"tags,omitempty"`
	Type              *CommerceCollectionType `json:"type,omitempty"`
	UpdatedAt         *time.Time              `json:"updated_at,omitempty"`
}

func (c CommerceCollection) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CommerceCollection) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (c *CommerceCollection) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CommerceCollection) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CommerceCollection) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CommerceCollection) GetIsActive() *bool {
	if c == nil {
		return nil
	}
	return c.IsActive
}

func (c *CommerceCollection) GetIsFeatured() *bool {
	if c == nil {
		return nil
	}
	return c.IsFeatured
}

func (c *CommerceCollection) GetIsVisible() *bool {
	if c == nil {
		return nil
	}
	return c.IsVisible
}

func (c *CommerceCollection) GetMedia() []CommerceItemMedia {
	if c == nil {
		return nil
	}
	return c.Media
}

func (c *CommerceCollection) GetMetadata() []CommerceMetadata {
	if c == nil {
		return nil
	}
	return c.Metadata
}

func (c *CommerceCollection) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CommerceCollection) GetParentID() *string {
	if c == nil {
		return nil
	}
	return c.ParentID
}

func (c *CommerceCollection) GetPublicDescription() *string {
	if c == nil {
		return nil
	}
	return c.PublicDescription
}

func (c *CommerceCollection) GetPublicName() *string {
	if c == nil {
		return nil
	}
	return c.PublicName
}

func (c *CommerceCollection) GetRaw() map[string]any {
	if c == nil {
		return nil
	}
	return c.Raw
}

func (c *CommerceCollection) GetTags() []string {
	if c == nil {
		return nil
	}
	return c.Tags
}

func (c *CommerceCollection) GetType() *CommerceCollectionType {
	if c == nil {
		return nil
	}
	return c.Type
}

func (c *CommerceCollection) GetUpdatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.UpdatedAt
}
