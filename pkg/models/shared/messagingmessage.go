// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type MessagingMessage struct {
	Attachments  []MessagingAttachment                 `json:"attachments,omitempty"`
	AuthorMember *PropertyMessagingMessageAuthorMember `json:"author_member,omitempty"`
	ChannelID    *string                               `json:"channel_id,omitempty"`
	// Represents the IDs of all channels to which the message is sent. Identifies the channels where the message is posted.
	ChannelIds         []string          `json:"channel_ids,omitempty"`
	CreatedAt          *time.Time        `json:"created_at,omitempty"`
	DestinationMembers []MessagingMember `json:"destination_members,omitempty"`
	HiddenMembers      []MessagingMember `json:"hidden_members,omitempty"`
	ID                 *string           `json:"id,omitempty"`
	MentionedMembers   []MessagingMember `json:"mentioned_members,omitempty"`
	Message            *string           `json:"message,omitempty"`
	MessageHTML        *string           `json:"message_html,omitempty"`
	ParentMessageID    *string           `json:"parent_message_id,omitempty"`
	Raw                map[string]any    `json:"raw,omitempty"`
	Reference          *string           `json:"reference,omitempty"`
	RootMessageID      *string           `json:"root_message_id,omitempty"`
	Subject            *string           `json:"subject,omitempty"`
	UpdatedAt          *time.Time        `json:"updated_at,omitempty"`
	WebURL             *string           `json:"web_url,omitempty"`
}

func (m MessagingMessage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MessagingMessage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MessagingMessage) GetAttachments() []MessagingAttachment {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *MessagingMessage) GetAuthorMember() *PropertyMessagingMessageAuthorMember {
	if o == nil {
		return nil
	}
	return o.AuthorMember
}

func (o *MessagingMessage) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *MessagingMessage) GetChannelIds() []string {
	if o == nil {
		return nil
	}
	return o.ChannelIds
}

func (o *MessagingMessage) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *MessagingMessage) GetDestinationMembers() []MessagingMember {
	if o == nil {
		return nil
	}
	return o.DestinationMembers
}

func (o *MessagingMessage) GetHiddenMembers() []MessagingMember {
	if o == nil {
		return nil
	}
	return o.HiddenMembers
}

func (o *MessagingMessage) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MessagingMessage) GetMentionedMembers() []MessagingMember {
	if o == nil {
		return nil
	}
	return o.MentionedMembers
}

func (o *MessagingMessage) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *MessagingMessage) GetMessageHTML() *string {
	if o == nil {
		return nil
	}
	return o.MessageHTML
}

func (o *MessagingMessage) GetParentMessageID() *string {
	if o == nil {
		return nil
	}
	return o.ParentMessageID
}

func (o *MessagingMessage) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *MessagingMessage) GetReference() *string {
	if o == nil {
		return nil
	}
	return o.Reference
}

func (o *MessagingMessage) GetRootMessageID() *string {
	if o == nil {
		return nil
	}
	return o.RootMessageID
}

func (o *MessagingMessage) GetSubject() *string {
	if o == nil {
		return nil
	}
	return o.Subject
}

func (o *MessagingMessage) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *MessagingMessage) GetWebURL() *string {
	if o == nil {
		return nil
	}
	return o.WebURL
}
