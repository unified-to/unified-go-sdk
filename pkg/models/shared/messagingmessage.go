// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type MessagingMessage struct {
	Attachments  []MessagingAttachment                 `json:"attachments,omitempty"`
	AuthorMember *PropertyMessagingMessageAuthorMember `json:"author_member,omitempty"`
	ChannelID    *string                               `json:"channel_id,omitempty"`
	// @deprecated; use channels instead
	ChannelIds []string `json:"channel_ids,omitempty"`
	// Represents the names of all channels to which the message is sent. Identifies the channels where the message is posted.
	Channels           []MessagingChannelMessage `json:"channels,omitempty"`
	CreatedAt          *time.Time                `json:"created_at,omitempty"`
	DestinationMembers []MessagingMember         `json:"destination_members,omitempty"`
	HasChildren        *bool                     `json:"has_children,omitempty"`
	HiddenMembers      []MessagingMember         `json:"hidden_members,omitempty"`
	ID                 *string                   `json:"id,omitempty"`
	IsUnread           *bool                     `json:"is_unread,omitempty"`
	MentionedMembers   []MessagingMember         `json:"mentioned_members,omitempty"`
	Message            *string                   `json:"message,omitempty"`
	MessageHTML        *string                   `json:"message_html,omitempty"`
	MessageMarkdown    *string                   `json:"message_markdown,omitempty"`
	ParentID           *string                   `json:"parent_id,omitempty"`
	ParentMessageID    *string                   `json:"parent_message_id,omitempty"`
	Raw                map[string]any            `json:"raw,omitempty"`
	Reactions          []MessagingReaction       `json:"reactions,omitempty"`
	Reference          *string                   `json:"reference,omitempty"`
	RootMessageID      *string                   `json:"root_message_id,omitempty"`
	Subject            *string                   `json:"subject,omitempty"`
	UpdatedAt          *time.Time                `json:"updated_at,omitempty"`
	WebURL             *string                   `json:"web_url,omitempty"`
}

func (m MessagingMessage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MessagingMessage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (m *MessagingMessage) GetAttachments() []MessagingAttachment {
	if m == nil {
		return nil
	}
	return m.Attachments
}

func (m *MessagingMessage) GetAuthorMember() *PropertyMessagingMessageAuthorMember {
	if m == nil {
		return nil
	}
	return m.AuthorMember
}

func (m *MessagingMessage) GetChannelID() *string {
	if m == nil {
		return nil
	}
	return m.ChannelID
}

func (m *MessagingMessage) GetChannelIds() []string {
	if m == nil {
		return nil
	}
	return m.ChannelIds
}

func (m *MessagingMessage) GetChannels() []MessagingChannelMessage {
	if m == nil {
		return nil
	}
	return m.Channels
}

func (m *MessagingMessage) GetCreatedAt() *time.Time {
	if m == nil {
		return nil
	}
	return m.CreatedAt
}

func (m *MessagingMessage) GetDestinationMembers() []MessagingMember {
	if m == nil {
		return nil
	}
	return m.DestinationMembers
}

func (m *MessagingMessage) GetHasChildren() *bool {
	if m == nil {
		return nil
	}
	return m.HasChildren
}

func (m *MessagingMessage) GetHiddenMembers() []MessagingMember {
	if m == nil {
		return nil
	}
	return m.HiddenMembers
}

func (m *MessagingMessage) GetID() *string {
	if m == nil {
		return nil
	}
	return m.ID
}

func (m *MessagingMessage) GetIsUnread() *bool {
	if m == nil {
		return nil
	}
	return m.IsUnread
}

func (m *MessagingMessage) GetMentionedMembers() []MessagingMember {
	if m == nil {
		return nil
	}
	return m.MentionedMembers
}

func (m *MessagingMessage) GetMessage() *string {
	if m == nil {
		return nil
	}
	return m.Message
}

func (m *MessagingMessage) GetMessageHTML() *string {
	if m == nil {
		return nil
	}
	return m.MessageHTML
}

func (m *MessagingMessage) GetMessageMarkdown() *string {
	if m == nil {
		return nil
	}
	return m.MessageMarkdown
}

func (m *MessagingMessage) GetParentID() *string {
	if m == nil {
		return nil
	}
	return m.ParentID
}

func (m *MessagingMessage) GetParentMessageID() *string {
	if m == nil {
		return nil
	}
	return m.ParentMessageID
}

func (m *MessagingMessage) GetRaw() map[string]any {
	if m == nil {
		return nil
	}
	return m.Raw
}

func (m *MessagingMessage) GetReactions() []MessagingReaction {
	if m == nil {
		return nil
	}
	return m.Reactions
}

func (m *MessagingMessage) GetReference() *string {
	if m == nil {
		return nil
	}
	return m.Reference
}

func (m *MessagingMessage) GetRootMessageID() *string {
	if m == nil {
		return nil
	}
	return m.RootMessageID
}

func (m *MessagingMessage) GetSubject() *string {
	if m == nil {
		return nil
	}
	return m.Subject
}

func (m *MessagingMessage) GetUpdatedAt() *time.Time {
	if m == nil {
		return nil
	}
	return m.UpdatedAt
}

func (m *MessagingMessage) GetWebURL() *string {
	if m == nil {
		return nil
	}
	return m.WebURL
}
