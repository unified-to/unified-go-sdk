// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AtsGroupType string

const (
	AtsGroupTypeTeam          AtsGroupType = "TEAM"
	AtsGroupTypeGroup         AtsGroupType = "GROUP"
	AtsGroupTypeDepartment    AtsGroupType = "DEPARTMENT"
	AtsGroupTypeDivision      AtsGroupType = "DIVISION"
	AtsGroupTypeBusinessUnit  AtsGroupType = "BUSINESS_UNIT"
	AtsGroupTypeBranch        AtsGroupType = "BRANCH"
	AtsGroupTypeSubDepartment AtsGroupType = "SUB_DEPARTMENT"
)

func (e AtsGroupType) ToPointer() *AtsGroupType {
	return &e
}
func (e *AtsGroupType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEAM":
		fallthrough
	case "GROUP":
		fallthrough
	case "DEPARTMENT":
		fallthrough
	case "DIVISION":
		fallthrough
	case "BUSINESS_UNIT":
		fallthrough
	case "BRANCH":
		fallthrough
	case "SUB_DEPARTMENT":
		*e = AtsGroupType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AtsGroupType: %v", v)
	}
}

type AtsGroup struct {
	ID   *string       `json:"id,omitempty"`
	Name *string       `json:"name,omitempty"`
	Type *AtsGroupType `json:"type,omitempty"`
}

func (o *AtsGroup) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AtsGroup) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AtsGroup) GetType() *AtsGroupType {
	if o == nil {
		return nil
	}
	return o.Type
}
