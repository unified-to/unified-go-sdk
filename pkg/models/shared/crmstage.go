// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CrmStage struct {
	Active          *bool      `json:"active,omitempty"`
	CreatedAt       *time.Time `json:"created_at,omitempty"`
	DealProbability *float64   `json:"deal_probability,omitempty"`
	DisplayOrder    *float64   `json:"display_order,omitempty"`
	ID              *string    `json:"id,omitempty"`
	Name            *string    `json:"name,omitempty"`
	UpdatedAt       *time.Time `json:"updated_at,omitempty"`
}

func (c CrmStage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CrmStage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *CrmStage) GetActive() *bool {
	if c == nil {
		return nil
	}
	return c.Active
}

func (c *CrmStage) GetCreatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CrmStage) GetDealProbability() *float64 {
	if c == nil {
		return nil
	}
	return c.DealProbability
}

func (c *CrmStage) GetDisplayOrder() *float64 {
	if c == nil {
		return nil
	}
	return c.DisplayOrder
}

func (c *CrmStage) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CrmStage) GetName() *string {
	if c == nil {
		return nil
	}
	return c.Name
}

func (c *CrmStage) GetUpdatedAt() *time.Time {
	if c == nil {
		return nil
	}
	return c.UpdatedAt
}
