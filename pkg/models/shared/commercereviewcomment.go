// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type CommerceReviewCommentStatus string

const (
	CommerceReviewCommentStatusPending  CommerceReviewCommentStatus = "PENDING"
	CommerceReviewCommentStatusApproved CommerceReviewCommentStatus = "APPROVED"
	CommerceReviewCommentStatusRejected CommerceReviewCommentStatus = "REJECTED"
	CommerceReviewCommentStatusSpam     CommerceReviewCommentStatus = "SPAM"
)

func (e CommerceReviewCommentStatus) ToPointer() *CommerceReviewCommentStatus {
	return &e
}

type CommerceReviewComment struct {
	AuthorAvatarURL *string                      `json:"author_avatar_url,omitempty"`
	AuthorEmail     *string                      `json:"author_email,omitempty"`
	AuthorLocation  *string                      `json:"author_location,omitempty"`
	AuthorName      *string                      `json:"author_name,omitempty"`
	Content         string                       `json:"content"`
	CreatedAt       *time.Time                   `json:"created_at,omitempty"`
	HelpfulVotes    *float64                     `json:"helpful_votes,omitempty"`
	ID              *string                      `json:"id,omitempty"`
	IsPublic        *bool                        `json:"is_public,omitempty"`
	IsVerified      *bool                        `json:"is_verified,omitempty"`
	Metadata        []CommerceMetadata           `json:"metadata,omitempty"`
	Raw             map[string]any               `json:"raw,omitempty"`
	Status          *CommerceReviewCommentStatus `json:"status,omitempty"`
	UnhelpfulVotes  *float64                     `json:"unhelpful_votes,omitempty"`
	UpdatedAt       *time.Time                   `json:"updated_at,omitempty"`
}

func (c CommerceReviewComment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CommerceReviewComment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CommerceReviewComment) GetAuthorAvatarURL() *string {
	if o == nil {
		return nil
	}
	return o.AuthorAvatarURL
}

func (o *CommerceReviewComment) GetAuthorEmail() *string {
	if o == nil {
		return nil
	}
	return o.AuthorEmail
}

func (o *CommerceReviewComment) GetAuthorLocation() *string {
	if o == nil {
		return nil
	}
	return o.AuthorLocation
}

func (o *CommerceReviewComment) GetAuthorName() *string {
	if o == nil {
		return nil
	}
	return o.AuthorName
}

func (o *CommerceReviewComment) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *CommerceReviewComment) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CommerceReviewComment) GetHelpfulVotes() *float64 {
	if o == nil {
		return nil
	}
	return o.HelpfulVotes
}

func (o *CommerceReviewComment) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CommerceReviewComment) GetIsPublic() *bool {
	if o == nil {
		return nil
	}
	return o.IsPublic
}

func (o *CommerceReviewComment) GetIsVerified() *bool {
	if o == nil {
		return nil
	}
	return o.IsVerified
}

func (o *CommerceReviewComment) GetMetadata() []CommerceMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *CommerceReviewComment) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *CommerceReviewComment) GetStatus() *CommerceReviewCommentStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CommerceReviewComment) GetUnhelpfulVotes() *float64 {
	if o == nil {
		return nil
	}
	return o.UnhelpfulVotes
}

func (o *CommerceReviewComment) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
