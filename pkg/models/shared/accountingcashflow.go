// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

// AccountingCashflow - Sections
type AccountingCashflow struct {
	CashBeginningAmount   *float64                    `json:"cash_beginning_amount,omitempty"`
	CashEndingAmount      *float64                    `json:"cash_ending_amount,omitempty"`
	CategoryIds           []string                    `json:"category_ids,omitempty"`
	ContactID             *string                     `json:"contact_id,omitempty"`
	CreatedAt             *time.Time                  `json:"created_at,omitempty"`
	Currency              *string                     `json:"currency,omitempty"`
	EndAt                 *time.Time                  `json:"end_at,omitempty"`
	FinancingSections     []AccountingCashflowSection `json:"financing_sections,omitempty"`
	ID                    *string                     `json:"id,omitempty"`
	InvestingSections     []AccountingCashflowSection `json:"investing_sections,omitempty"`
	Name                  *string                     `json:"name,omitempty"`
	NetChangeInCashAmount *float64                    `json:"net_change_in_cash_amount,omitempty"`
	OperatingSections     []AccountingCashflowSection `json:"operating_sections,omitempty"`
	Raw                   map[string]any              `json:"raw,omitempty"`
	StartAt               *time.Time                  `json:"start_at,omitempty"`
	UpdatedAt             *time.Time                  `json:"updated_at,omitempty"`
}

func (a AccountingCashflow) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountingCashflow) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AccountingCashflow) GetCashBeginningAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.CashBeginningAmount
}

func (a *AccountingCashflow) GetCashEndingAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.CashEndingAmount
}

func (a *AccountingCashflow) GetCategoryIds() []string {
	if a == nil {
		return nil
	}
	return a.CategoryIds
}

func (a *AccountingCashflow) GetContactID() *string {
	if a == nil {
		return nil
	}
	return a.ContactID
}

func (a *AccountingCashflow) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AccountingCashflow) GetCurrency() *string {
	if a == nil {
		return nil
	}
	return a.Currency
}

func (a *AccountingCashflow) GetEndAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.EndAt
}

func (a *AccountingCashflow) GetFinancingSections() []AccountingCashflowSection {
	if a == nil {
		return nil
	}
	return a.FinancingSections
}

func (a *AccountingCashflow) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AccountingCashflow) GetInvestingSections() []AccountingCashflowSection {
	if a == nil {
		return nil
	}
	return a.InvestingSections
}

func (a *AccountingCashflow) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *AccountingCashflow) GetNetChangeInCashAmount() *float64 {
	if a == nil {
		return nil
	}
	return a.NetChangeInCashAmount
}

func (a *AccountingCashflow) GetOperatingSections() []AccountingCashflowSection {
	if a == nil {
		return nil
	}
	return a.OperatingSections
}

func (a *AccountingCashflow) GetRaw() map[string]any {
	if a == nil {
		return nil
	}
	return a.Raw
}

func (a *AccountingCashflow) GetStartAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.StartAt
}

func (a *AccountingCashflow) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}
