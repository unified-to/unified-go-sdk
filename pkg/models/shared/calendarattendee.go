// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CalendarAttendeeStatus string

const (
	CalendarAttendeeStatusAccepted  CalendarAttendeeStatus = "ACCEPTED"
	CalendarAttendeeStatusRejected  CalendarAttendeeStatus = "REJECTED"
	CalendarAttendeeStatusTentative CalendarAttendeeStatus = "TENTATIVE"
)

func (e CalendarAttendeeStatus) ToPointer() *CalendarAttendeeStatus {
	return &e
}

type CalendarAttendee struct {
	Email    *string                 `json:"email,omitempty"`
	Name     *string                 `json:"name,omitempty"`
	Required *bool                   `json:"required,omitempty"`
	Status   *CalendarAttendeeStatus `json:"status,omitempty"`
	UserID   *string                 `json:"user_id,omitempty"`
}

func (o *CalendarAttendee) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *CalendarAttendee) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CalendarAttendee) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *CalendarAttendee) GetStatus() *CalendarAttendeeStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CalendarAttendee) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}
