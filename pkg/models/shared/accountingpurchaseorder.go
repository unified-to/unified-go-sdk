// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/unified-to/unified-go-sdk/pkg/utils"
	"time"
)

type AccountingPurchaseorderStatus string

const (
	AccountingPurchaseorderStatusDraft             AccountingPurchaseorderStatus = "DRAFT"
	AccountingPurchaseorderStatusVoided            AccountingPurchaseorderStatus = "VOIDED"
	AccountingPurchaseorderStatusAuthorized        AccountingPurchaseorderStatus = "AUTHORIZED"
	AccountingPurchaseorderStatusPaid              AccountingPurchaseorderStatus = "PAID"
	AccountingPurchaseorderStatusPartiallyPaid     AccountingPurchaseorderStatus = "PARTIALLY_PAID"
	AccountingPurchaseorderStatusPartiallyRefunded AccountingPurchaseorderStatus = "PARTIALLY_REFUNDED"
	AccountingPurchaseorderStatusRefunded          AccountingPurchaseorderStatus = "REFUNDED"
)

func (e AccountingPurchaseorderStatus) ToPointer() *AccountingPurchaseorderStatus {
	return &e
}

type AccountingPurchaseorder struct {
	AccountID       *string                                         `json:"account_id,omitempty"`
	BillingAddress  *PropertyAccountingPurchaseorderBillingAddress  `json:"billing_address,omitempty"`
	ContactID       *string                                         `json:"contact_id,omitempty"`
	CreatedAt       *time.Time                                      `json:"created_at,omitempty"`
	Currency        *string                                         `json:"currency,omitempty"`
	ID              *string                                         `json:"id,omitempty"`
	Lineitems       []AccountingLineitem                            `json:"lineitems,omitempty"`
	PostedAt        *time.Time                                      `json:"posted_at,omitempty"`
	Raw             map[string]any                                  `json:"raw,omitempty"`
	ShippingAddress *PropertyAccountingPurchaseorderShippingAddress `json:"shipping_address,omitempty"`
	Status          *AccountingPurchaseorderStatus                  `json:"status,omitempty"`
	TotalAmount     *float64                                        `json:"total_amount,omitempty"`
	UpdatedAt       *time.Time                                      `json:"updated_at,omitempty"`
}

func (a AccountingPurchaseorder) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountingPurchaseorder) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AccountingPurchaseorder) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *AccountingPurchaseorder) GetBillingAddress() *PropertyAccountingPurchaseorderBillingAddress {
	if o == nil {
		return nil
	}
	return o.BillingAddress
}

func (o *AccountingPurchaseorder) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *AccountingPurchaseorder) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AccountingPurchaseorder) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *AccountingPurchaseorder) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AccountingPurchaseorder) GetLineitems() []AccountingLineitem {
	if o == nil {
		return nil
	}
	return o.Lineitems
}

func (o *AccountingPurchaseorder) GetPostedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.PostedAt
}

func (o *AccountingPurchaseorder) GetRaw() map[string]any {
	if o == nil {
		return nil
	}
	return o.Raw
}

func (o *AccountingPurchaseorder) GetShippingAddress() *PropertyAccountingPurchaseorderShippingAddress {
	if o == nil {
		return nil
	}
	return o.ShippingAddress
}

func (o *AccountingPurchaseorder) GetStatus() *AccountingPurchaseorderStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *AccountingPurchaseorder) GetTotalAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalAmount
}

func (o *AccountingPurchaseorder) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
