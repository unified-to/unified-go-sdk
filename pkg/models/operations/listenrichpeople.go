// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListEnrichPeopleRequest struct {
	// The name of the company the person is associated with.  Not valid by itself.
	CompanyName *string `queryParam:"style=form,explode=true,name=company_name"`
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// The email of the person to search
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// The LinkedIn URL of the person to search
	LinkedinURL *string `queryParam:"style=form,explode=true,name=linkedin_url"`
	// The name of the person to search
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// The twitter handle of the person to search
	Twitter *string `queryParam:"style=form,explode=true,name=twitter"`
}

func (l *ListEnrichPeopleRequest) GetCompanyName() *string {
	if l == nil {
		return nil
	}
	return l.CompanyName
}

func (l *ListEnrichPeopleRequest) GetConnectionID() string {
	if l == nil {
		return ""
	}
	return l.ConnectionID
}

func (l *ListEnrichPeopleRequest) GetEmail() *string {
	if l == nil {
		return nil
	}
	return l.Email
}

func (l *ListEnrichPeopleRequest) GetLinkedinURL() *string {
	if l == nil {
		return nil
	}
	return l.LinkedinURL
}

func (l *ListEnrichPeopleRequest) GetName() *string {
	if l == nil {
		return nil
	}
	return l.Name
}

func (l *ListEnrichPeopleRequest) GetTwitter() *string {
	if l == nil {
		return nil
	}
	return l.Twitter
}

type ListEnrichPeopleResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	EnrichPerson *shared.EnrichPerson
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListEnrichPeopleResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListEnrichPeopleResponse) GetEnrichPerson() *shared.EnrichPerson {
	if l == nil {
		return nil
	}
	return l.EnrichPerson
}

func (l *ListEnrichPeopleResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListEnrichPeopleResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
