// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type GetUnifiedConnectionSecurity struct {
	Jwt string `security:"scheme,type=apiKey,subtype=header,name=authorization"`
}

func (o *GetUnifiedConnectionSecurity) GetJwt() string {
	if o == nil {
		return ""
	}
	return o.Jwt
}

type GetUnifiedConnectionRequest struct {
	// ID of the Connection
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetUnifiedConnectionRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetUnifiedConnectionResponse struct {
	// Successful
	Connection *shared.Connection
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetUnifiedConnectionResponse) GetConnection() *shared.Connection {
	if o == nil {
		return nil
	}
	return o.Connection
}

func (o *GetUnifiedConnectionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUnifiedConnectionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUnifiedConnectionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
