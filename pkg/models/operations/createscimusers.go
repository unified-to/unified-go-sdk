// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type CreateScimUsersRequest struct {
	ScimUser shared.ScimUser `request:"mediaType=application/json"`
	// ID of the connection
	ConnectionID string   `pathParam:"style=simple,explode=false,name=connection_id"`
	Count        *float64 `queryParam:"style=form,explode=true,name=count"`
	Filter       *string  `queryParam:"style=form,explode=true,name=filter"`
	SortBy       *string  `queryParam:"style=form,explode=true,name=sortBy"`
	SortOrder    *string  `queryParam:"style=form,explode=true,name=sortOrder"`
	StartIndex   *float64 `queryParam:"style=form,explode=true,name=startIndex"`
}

func (c *CreateScimUsersRequest) GetScimUser() shared.ScimUser {
	if c == nil {
		return shared.ScimUser{}
	}
	return c.ScimUser
}

func (c *CreateScimUsersRequest) GetConnectionID() string {
	if c == nil {
		return ""
	}
	return c.ConnectionID
}

func (c *CreateScimUsersRequest) GetCount() *float64 {
	if c == nil {
		return nil
	}
	return c.Count
}

func (c *CreateScimUsersRequest) GetFilter() *string {
	if c == nil {
		return nil
	}
	return c.Filter
}

func (c *CreateScimUsersRequest) GetSortBy() *string {
	if c == nil {
		return nil
	}
	return c.SortBy
}

func (c *CreateScimUsersRequest) GetSortOrder() *string {
	if c == nil {
		return nil
	}
	return c.SortOrder
}

func (c *CreateScimUsersRequest) GetStartIndex() *float64 {
	if c == nil {
		return nil
	}
	return c.StartIndex
}

type CreateScimUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	ScimUser *shared.ScimUser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (c *CreateScimUsersResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateScimUsersResponse) GetScimUser() *shared.ScimUser {
	if c == nil {
		return nil
	}
	return c.ScimUser
}

func (c *CreateScimUsersResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateScimUsersResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}
