// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListRepoOrganizationsRequest struct {
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// Comma-delimited fields to return
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	Limit  *float64 `queryParam:"style=form,explode=true,name=limit"`
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	Order  *string  `queryParam:"style=form,explode=true,name=order"`
	// Query string to search. eg. email address or name
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Raw parameters to include in the 3rd-party request. Encoded as a URL component. eg. raw parameters: foo=bar&zoo=bar -> raw=foo%3Dbar%26zoo%3Dbar
	Raw  *string `queryParam:"style=form,explode=true,name=raw"`
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Return only results whose updated date is equal or greater to this value
	UpdatedGte *string `queryParam:"style=form,explode=true,name=updated_gte"`
}

func (l *ListRepoOrganizationsRequest) GetConnectionID() string {
	if l == nil {
		return ""
	}
	return l.ConnectionID
}

func (l *ListRepoOrganizationsRequest) GetFields() []string {
	if l == nil {
		return nil
	}
	return l.Fields
}

func (l *ListRepoOrganizationsRequest) GetLimit() *float64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListRepoOrganizationsRequest) GetOffset() *float64 {
	if l == nil {
		return nil
	}
	return l.Offset
}

func (l *ListRepoOrganizationsRequest) GetOrder() *string {
	if l == nil {
		return nil
	}
	return l.Order
}

func (l *ListRepoOrganizationsRequest) GetQuery() *string {
	if l == nil {
		return nil
	}
	return l.Query
}

func (l *ListRepoOrganizationsRequest) GetRaw() *string {
	if l == nil {
		return nil
	}
	return l.Raw
}

func (l *ListRepoOrganizationsRequest) GetSort() *string {
	if l == nil {
		return nil
	}
	return l.Sort
}

func (l *ListRepoOrganizationsRequest) GetUpdatedGte() *string {
	if l == nil {
		return nil
	}
	return l.UpdatedGte
}

type ListRepoOrganizationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	RepoOrganizations []shared.RepoOrganization
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListRepoOrganizationsResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListRepoOrganizationsResponse) GetRepoOrganizations() []shared.RepoOrganization {
	if l == nil {
		return nil
	}
	return l.RepoOrganizations
}

func (l *ListRepoOrganizationsResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListRepoOrganizationsResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
