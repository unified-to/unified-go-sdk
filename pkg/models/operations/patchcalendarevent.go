// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type PatchCalendarEventRequest struct {
	CalendarEvent shared.CalendarEvent `request:"mediaType=application/json"`
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// Comma-delimited fields to return
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// ID of the Event
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Raw parameters to include in the 3rd-party request. Encoded as a URL component. eg. raw parameters: foo=bar&zoo=bar -> raw=foo%3Dbar%26zoo%3Dbar
	Raw *string `queryParam:"style=form,explode=true,name=raw"`
}

func (p *PatchCalendarEventRequest) GetCalendarEvent() shared.CalendarEvent {
	if p == nil {
		return shared.CalendarEvent{}
	}
	return p.CalendarEvent
}

func (p *PatchCalendarEventRequest) GetConnectionID() string {
	if p == nil {
		return ""
	}
	return p.ConnectionID
}

func (p *PatchCalendarEventRequest) GetFields() []string {
	if p == nil {
		return nil
	}
	return p.Fields
}

func (p *PatchCalendarEventRequest) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PatchCalendarEventRequest) GetRaw() *string {
	if p == nil {
		return nil
	}
	return p.Raw
}

type PatchCalendarEventResponse struct {
	// Successful
	CalendarEvent *shared.CalendarEvent
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (p *PatchCalendarEventResponse) GetCalendarEvent() *shared.CalendarEvent {
	if p == nil {
		return nil
	}
	return p.CalendarEvent
}

func (p *PatchCalendarEventResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PatchCalendarEventResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PatchCalendarEventResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}
