// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type PatchUnifiedConnectionRequest struct {
	// A connection represents a specific authentication of an integration.
	Connection shared.Connection `request:"mediaType=application/json"`
	// ID of the Connection
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (p *PatchUnifiedConnectionRequest) GetConnection() shared.Connection {
	if p == nil {
		return shared.Connection{}
	}
	return p.Connection
}

func (p *PatchUnifiedConnectionRequest) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

type PatchUnifiedConnectionResponse struct {
	// Successful
	Connection *shared.Connection
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (p *PatchUnifiedConnectionResponse) GetConnection() *shared.Connection {
	if p == nil {
		return nil
	}
	return p.Connection
}

func (p *PatchUnifiedConnectionResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PatchUnifiedConnectionResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PatchUnifiedConnectionResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}
