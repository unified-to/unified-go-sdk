// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListUnifiedApicallsRequest struct {
	// Filter the results to just this integration
	ConnectionID *string `queryParam:"style=form,explode=true,name=connection_id"`
	Env          *string `queryParam:"style=form,explode=true,name=env"`
	// Filter the results for API Calls with errors
	Error *bool `queryParam:"style=form,explode=true,name=error"`
	// Filter the results to only those integrations for your user referenced by this value
	ExternalXref *string `queryParam:"style=form,explode=true,name=external_xref"`
	// Filter the results to just this integration
	IntegrationType *string `queryParam:"style=form,explode=true,name=integration_type"`
	// Filter the results for only billable API Calls
	IsBillable *bool    `queryParam:"style=form,explode=true,name=is_billable"`
	Limit      *float64 `queryParam:"style=form,explode=true,name=limit"`
	Offset     *float64 `queryParam:"style=form,explode=true,name=offset"`
	Order      *string  `queryParam:"style=form,explode=true,name=order"`
	Sort       *string  `queryParam:"style=form,explode=true,name=sort"`
	// Filter the results to just this type
	Type *string `queryParam:"style=form,explode=true,name=type"`
	// Return only results whose updated date is equal or greater to this value
	UpdatedGte *string `queryParam:"style=form,explode=true,name=updated_gte"`
	// Filter the results to just this webhook
	WebhookID *string `queryParam:"style=form,explode=true,name=webhook_id"`
}

func (l *ListUnifiedApicallsRequest) GetConnectionID() *string {
	if l == nil {
		return nil
	}
	return l.ConnectionID
}

func (l *ListUnifiedApicallsRequest) GetEnv() *string {
	if l == nil {
		return nil
	}
	return l.Env
}

func (l *ListUnifiedApicallsRequest) GetError() *bool {
	if l == nil {
		return nil
	}
	return l.Error
}

func (l *ListUnifiedApicallsRequest) GetExternalXref() *string {
	if l == nil {
		return nil
	}
	return l.ExternalXref
}

func (l *ListUnifiedApicallsRequest) GetIntegrationType() *string {
	if l == nil {
		return nil
	}
	return l.IntegrationType
}

func (l *ListUnifiedApicallsRequest) GetIsBillable() *bool {
	if l == nil {
		return nil
	}
	return l.IsBillable
}

func (l *ListUnifiedApicallsRequest) GetLimit() *float64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListUnifiedApicallsRequest) GetOffset() *float64 {
	if l == nil {
		return nil
	}
	return l.Offset
}

func (l *ListUnifiedApicallsRequest) GetOrder() *string {
	if l == nil {
		return nil
	}
	return l.Order
}

func (l *ListUnifiedApicallsRequest) GetSort() *string {
	if l == nil {
		return nil
	}
	return l.Sort
}

func (l *ListUnifiedApicallsRequest) GetType() *string {
	if l == nil {
		return nil
	}
	return l.Type
}

func (l *ListUnifiedApicallsRequest) GetUpdatedGte() *string {
	if l == nil {
		return nil
	}
	return l.UpdatedGte
}

func (l *ListUnifiedApicallsRequest) GetWebhookID() *string {
	if l == nil {
		return nil
	}
	return l.WebhookID
}

type ListUnifiedApicallsResponse struct {
	// Successful
	APICalls []shared.APICall
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListUnifiedApicallsResponse) GetAPICalls() []shared.APICall {
	if l == nil {
		return nil
	}
	return l.APICalls
}

func (l *ListUnifiedApicallsResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListUnifiedApicallsResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListUnifiedApicallsResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
