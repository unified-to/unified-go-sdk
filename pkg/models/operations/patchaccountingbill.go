// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type PatchAccountingBillRequest struct {
	AccountingBill shared.AccountingBill `request:"mediaType=application/json"`
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// Comma-delimited fields to return
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// ID of the Bill
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Raw parameters to include in the 3rd-party request. Encoded as a URL component. eg. raw parameters: foo=bar&zoo=bar -> raw=foo%3Dbar%26zoo%3Dbar
	Raw *string `queryParam:"style=form,explode=true,name=raw"`
}

func (p *PatchAccountingBillRequest) GetAccountingBill() shared.AccountingBill {
	if p == nil {
		return shared.AccountingBill{}
	}
	return p.AccountingBill
}

func (p *PatchAccountingBillRequest) GetConnectionID() string {
	if p == nil {
		return ""
	}
	return p.ConnectionID
}

func (p *PatchAccountingBillRequest) GetFields() []string {
	if p == nil {
		return nil
	}
	return p.Fields
}

func (p *PatchAccountingBillRequest) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PatchAccountingBillRequest) GetRaw() *string {
	if p == nil {
		return nil
	}
	return p.Raw
}

type PatchAccountingBillResponse struct {
	// Successful
	AccountingBill *shared.AccountingBill
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (p *PatchAccountingBillResponse) GetAccountingBill() *shared.AccountingBill {
	if p == nil {
		return nil
	}
	return p.AccountingBill
}

func (p *PatchAccountingBillResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PatchAccountingBillResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PatchAccountingBillResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}
