// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type GetHrisConnectionIDGroupIDSecurity struct {
	Jwt string `security:"scheme,type=apiKey,subtype=header,name=authorization"`
}

func (o *GetHrisConnectionIDGroupIDSecurity) GetJwt() string {
	if o == nil {
		return ""
	}
	return o.Jwt
}

type GetHrisConnectionIDGroupIDRequest struct {
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// ID of the Group
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetHrisConnectionIDGroupIDRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *GetHrisConnectionIDGroupIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetHrisConnectionIDGroupIDResponse struct {
	ContentType string
	// Successful
	HrisGroup   *shared.HrisGroup
	StatusCode  int
	RawResponse *http.Response
}

func (o *GetHrisConnectionIDGroupIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetHrisConnectionIDGroupIDResponse) GetHrisGroup() *shared.HrisGroup {
	if o == nil {
		return nil
	}
	return o.HrisGroup
}

func (o *GetHrisConnectionIDGroupIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetHrisConnectionIDGroupIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
