// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"io"
	"net/http"
)

type CreatePassthroughRawRequest struct {
	// integration-specific payload
	// This field accepts []byte data or io.Reader implementations, such as *os.File.
	RequestBody *any `request:"mediaType=text/plain"`
	// ID of the connection
	ConnectionID string         `pathParam:"style=simple,explode=false,name=connection_id"`
	Path         string         `pathParam:"style=simple,explode=false,name=path"`
	Query        map[string]any `queryParam:"style=form,explode=true,name=query"`
}

func (c *CreatePassthroughRawRequest) GetRequestBody() *any {
	if c == nil {
		return nil
	}
	return c.RequestBody
}

func (c *CreatePassthroughRawRequest) GetConnectionID() string {
	if c == nil {
		return ""
	}
	return c.ConnectionID
}

func (c *CreatePassthroughRawRequest) GetPath() string {
	if c == nil {
		return ""
	}
	return c.Path
}

func (c *CreatePassthroughRawRequest) GetQuery() map[string]any {
	if c == nil {
		return nil
	}
	return c.Query
}

type CreatePassthroughRawResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	DefaultWildcardWildcardResponseStream io.ReadCloser
	// Successful
	DefaultApplicationJSONAny any
	// Successful
	DefaultApplicationXMLRes *string
	// Successful
	DefaultTextCsvRes *string
	// Successful
	DefaultTextPlainRes *string
}

func (c *CreatePassthroughRawResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreatePassthroughRawResponse) GetHeaders() map[string][]string {
	if c == nil {
		return map[string][]string{}
	}
	return c.Headers
}

func (c *CreatePassthroughRawResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreatePassthroughRawResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreatePassthroughRawResponse) GetDefaultWildcardWildcardResponseStream() io.ReadCloser {
	if c == nil {
		return nil
	}
	return c.DefaultWildcardWildcardResponseStream
}

func (c *CreatePassthroughRawResponse) GetDefaultApplicationJSONAny() any {
	if c == nil {
		return nil
	}
	return c.DefaultApplicationJSONAny
}

func (c *CreatePassthroughRawResponse) GetDefaultApplicationXMLRes() *string {
	if c == nil {
		return nil
	}
	return c.DefaultApplicationXMLRes
}

func (c *CreatePassthroughRawResponse) GetDefaultTextCsvRes() *string {
	if c == nil {
		return nil
	}
	return c.DefaultTextCsvRes
}

func (c *CreatePassthroughRawResponse) GetDefaultTextPlainRes() *string {
	if c == nil {
		return nil
	}
	return c.DefaultTextPlainRes
}
