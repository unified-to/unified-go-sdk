// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type CreateCrmDealRequest struct {
	// A deal represents an opportunity with companies and/or contacts
	CrmDeal shared.CrmDeal `request:"mediaType=application/json"`
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// Comma-delimited fields to return
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// Raw parameters to include in the 3rd-party request. Encoded as a URL component. eg. raw parameters: foo=bar&zoo=bar -> raw=foo%3Dbar%26zoo%3Dbar
	Raw *string `queryParam:"style=form,explode=true,name=raw"`
}

func (c *CreateCrmDealRequest) GetCrmDeal() shared.CrmDeal {
	if c == nil {
		return shared.CrmDeal{}
	}
	return c.CrmDeal
}

func (c *CreateCrmDealRequest) GetConnectionID() string {
	if c == nil {
		return ""
	}
	return c.ConnectionID
}

func (c *CreateCrmDealRequest) GetFields() []string {
	if c == nil {
		return nil
	}
	return c.Fields
}

func (c *CreateCrmDealRequest) GetRaw() *string {
	if c == nil {
		return nil
	}
	return c.Raw
}

type CreateCrmDealResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	CrmDeal *shared.CrmDeal
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (c *CreateCrmDealResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateCrmDealResponse) GetCrmDeal() *shared.CrmDeal {
	if c == nil {
		return nil
	}
	return c.CrmDeal
}

func (c *CreateCrmDealResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateCrmDealResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}
