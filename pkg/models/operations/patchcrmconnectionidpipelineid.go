// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type PatchCrmConnectionIDPipelineIDSecurity struct {
	Jwt string `security:"scheme,type=apiKey,subtype=header,name=authorization"`
}

func (o *PatchCrmConnectionIDPipelineIDSecurity) GetJwt() string {
	if o == nil {
		return ""
	}
	return o.Jwt
}

type PatchCrmConnectionIDPipelineIDRequest struct {
	CrmPipeline *shared.CrmPipeline `request:"mediaType=application/json"`
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// ID of the Pipeline
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *PatchCrmConnectionIDPipelineIDRequest) GetCrmPipeline() *shared.CrmPipeline {
	if o == nil {
		return nil
	}
	return o.CrmPipeline
}

func (o *PatchCrmConnectionIDPipelineIDRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *PatchCrmConnectionIDPipelineIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type PatchCrmConnectionIDPipelineIDResponse struct {
	ContentType string
	// Successful
	CrmPipeline *shared.CrmPipeline
	StatusCode  int
	RawResponse *http.Response
}

func (o *PatchCrmConnectionIDPipelineIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchCrmConnectionIDPipelineIDResponse) GetCrmPipeline() *shared.CrmPipeline {
	if o == nil {
		return nil
	}
	return o.CrmPipeline
}

func (o *PatchCrmConnectionIDPipelineIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchCrmConnectionIDPipelineIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
