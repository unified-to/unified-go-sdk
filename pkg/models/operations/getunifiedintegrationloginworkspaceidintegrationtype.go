// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest struct {
	Env *string `queryParam:"style=form,explode=true,name=env"`
	// The URL where you want the user to be redirect to after an unsuccessful authentication. An "error" variable will be appended.
	FailureRedirect *string `queryParam:"style=form,explode=true,name=failure_redirect"`
	// Type of the supported integration
	IntegrationType string `pathParam:"style=simple,explode=false,name=integration_type"`
	Redirect        *bool  `queryParam:"style=form,explode=true,name=redirect"`
	// Extra state to send back to your success URL
	State *string `queryParam:"style=form,explode=true,name=state"`
	// The URL where you want the user to be redirect to after a successful authentication.  The connection ID will be appended with (id=<connectionId>) to this URL, as will the state that was provided.
	SuccessRedirect *string `queryParam:"style=form,explode=true,name=success_redirect"`
	// The ID of the workspace
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetEnv() *string {
	if o == nil {
		return nil
	}
	return o.Env
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetFailureRedirect() *string {
	if o == nil {
		return nil
	}
	return o.FailureRedirect
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetIntegrationType() string {
	if o == nil {
		return ""
	}
	return o.IntegrationType
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetRedirect() *bool {
	if o == nil {
		return nil
	}
	return o.Redirect
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetSuccessRedirect() *string {
	if o == nil {
		return nil
	}
	return o.SuccessRedirect
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

type GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful
	GetUnifiedIntegrationLoginWorkspaceIDIntegrationType200ApplicationJSONString *string
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetUnifiedIntegrationLoginWorkspaceIDIntegrationTypeResponse) GetGetUnifiedIntegrationLoginWorkspaceIDIntegrationType200ApplicationJSONString() *string {
	if o == nil {
		return nil
	}
	return o.GetUnifiedIntegrationLoginWorkspaceIDIntegrationType200ApplicationJSONString
}
