// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type GetScimUsersRequest struct {
	// ID of the connection
	ConnectionID string `pathParam:"style=simple,explode=false,name=connection_id"`
	// ID of the User
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (g *GetScimUsersRequest) GetConnectionID() string {
	if g == nil {
		return ""
	}
	return g.ConnectionID
}

func (g *GetScimUsersRequest) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

type GetScimUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	ScimUser *shared.ScimUser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetScimUsersResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetScimUsersResponse) GetScimUser() *shared.ScimUser {
	if g == nil {
		return nil
	}
	return g.ScimUser
}

func (g *GetScimUsersResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetScimUsersResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
