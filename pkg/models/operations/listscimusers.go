// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListScimUsersRequest struct {
	// ID of the connection
	ConnectionID string   `pathParam:"style=simple,explode=false,name=connection_id"`
	Count        *float64 `queryParam:"style=form,explode=true,name=count"`
	Filter       *string  `queryParam:"style=form,explode=true,name=filter"`
	SortBy       *string  `queryParam:"style=form,explode=true,name=sortBy"`
	SortOrder    *string  `queryParam:"style=form,explode=true,name=sortOrder"`
	StartIndex   *float64 `queryParam:"style=form,explode=true,name=startIndex"`
}

func (l *ListScimUsersRequest) GetConnectionID() string {
	if l == nil {
		return ""
	}
	return l.ConnectionID
}

func (l *ListScimUsersRequest) GetCount() *float64 {
	if l == nil {
		return nil
	}
	return l.Count
}

func (l *ListScimUsersRequest) GetFilter() *string {
	if l == nil {
		return nil
	}
	return l.Filter
}

func (l *ListScimUsersRequest) GetSortBy() *string {
	if l == nil {
		return nil
	}
	return l.SortBy
}

func (l *ListScimUsersRequest) GetSortOrder() *string {
	if l == nil {
		return nil
	}
	return l.SortOrder
}

func (l *ListScimUsersRequest) GetStartIndex() *float64 {
	if l == nil {
		return nil
	}
	return l.StartIndex
}

type ListScimUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	ScimUsers []shared.ScimUser
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListScimUsersResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListScimUsersResponse) GetScimUsers() []shared.ScimUser {
	if l == nil {
		return nil
	}
	return l.ScimUsers
}

func (l *ListScimUsersResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListScimUsersResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
