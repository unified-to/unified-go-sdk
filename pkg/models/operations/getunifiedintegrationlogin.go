// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetUnifiedIntegrationLoginRequest struct {
	Env *string `queryParam:"style=form,explode=true,name=env"`
	// The URL where you want the user to be redirect to after an unsuccessful authentication. An "error" variable will be appended.
	FailureRedirect *string `queryParam:"style=form,explode=true,name=failure_redirect"`
	// Type of the supported integration
	IntegrationType string `pathParam:"style=simple,explode=false,name=integration_type"`
	Redirect        *bool  `queryParam:"style=form,explode=true,name=redirect"`
	// Extra state to send back to your success URL
	State *string `queryParam:"style=form,explode=true,name=state"`
	// The URL where you want the user to be redirect to after a successful authentication/sign-in.  A "jwt" parameter will be appended to the URL which will contain a name and email of the user who just signed-in.
	SuccessRedirect *string `queryParam:"style=form,explode=true,name=success_redirect"`
	// The ID of the workspace
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

func (g *GetUnifiedIntegrationLoginRequest) GetEnv() *string {
	if g == nil {
		return nil
	}
	return g.Env
}

func (g *GetUnifiedIntegrationLoginRequest) GetFailureRedirect() *string {
	if g == nil {
		return nil
	}
	return g.FailureRedirect
}

func (g *GetUnifiedIntegrationLoginRequest) GetIntegrationType() string {
	if g == nil {
		return ""
	}
	return g.IntegrationType
}

func (g *GetUnifiedIntegrationLoginRequest) GetRedirect() *bool {
	if g == nil {
		return nil
	}
	return g.Redirect
}

func (g *GetUnifiedIntegrationLoginRequest) GetState() *string {
	if g == nil {
		return nil
	}
	return g.State
}

func (g *GetUnifiedIntegrationLoginRequest) GetSuccessRedirect() *string {
	if g == nil {
		return nil
	}
	return g.SuccessRedirect
}

func (g *GetUnifiedIntegrationLoginRequest) GetWorkspaceID() string {
	if g == nil {
		return ""
	}
	return g.WorkspaceID
}

type GetUnifiedIntegrationLoginResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successful
	Res *string
}

func (g *GetUnifiedIntegrationLoginResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetUnifiedIntegrationLoginResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetUnifiedIntegrationLoginResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetUnifiedIntegrationLoginResponse) GetRes() *string {
	if g == nil {
		return nil
	}
	return g.Res
}
