// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListUnifiedIssuesRequest struct {
	Limit  *float64 `queryParam:"style=form,explode=true,name=limit"`
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	Order  *string  `queryParam:"style=form,explode=true,name=order"`
	Sort   *string  `queryParam:"style=form,explode=true,name=sort"`
	// Return only results whose updated date is equal or greater to this value
	UpdatedGte *string `queryParam:"style=form,explode=true,name=updated_gte"`
}

func (l *ListUnifiedIssuesRequest) GetLimit() *float64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListUnifiedIssuesRequest) GetOffset() *float64 {
	if l == nil {
		return nil
	}
	return l.Offset
}

func (l *ListUnifiedIssuesRequest) GetOrder() *string {
	if l == nil {
		return nil
	}
	return l.Order
}

func (l *ListUnifiedIssuesRequest) GetSort() *string {
	if l == nil {
		return nil
	}
	return l.Sort
}

func (l *ListUnifiedIssuesRequest) GetUpdatedGte() *string {
	if l == nil {
		return nil
	}
	return l.UpdatedGte
}

type ListUnifiedIssuesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	Issues []shared.Issue
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListUnifiedIssuesResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListUnifiedIssuesResponse) GetIssues() []shared.Issue {
	if l == nil {
		return nil
	}
	return l.Issues
}

func (l *ListUnifiedIssuesResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListUnifiedIssuesResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
