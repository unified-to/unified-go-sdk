// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListScimGroupsRequest struct {
	// ID of the connection
	ConnectionID string   `pathParam:"style=simple,explode=false,name=connection_id"`
	Count        *float64 `queryParam:"style=form,explode=true,name=count"`
	Filter       *string  `queryParam:"style=form,explode=true,name=filter"`
	SortBy       *string  `queryParam:"style=form,explode=true,name=sortBy"`
	SortOrder    *string  `queryParam:"style=form,explode=true,name=sortOrder"`
	StartIndex   *float64 `queryParam:"style=form,explode=true,name=startIndex"`
}

func (o *ListScimGroupsRequest) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *ListScimGroupsRequest) GetCount() *float64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListScimGroupsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListScimGroupsRequest) GetSortBy() *string {
	if o == nil {
		return nil
	}
	return o.SortBy
}

func (o *ListScimGroupsRequest) GetSortOrder() *string {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

func (o *ListScimGroupsRequest) GetStartIndex() *float64 {
	if o == nil {
		return nil
	}
	return o.StartIndex
}

type ListScimGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	ScimGroups []shared.ScimGroup
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListScimGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListScimGroupsResponse) GetScimGroups() []shared.ScimGroup {
	if o == nil {
		return nil
	}
	return o.ScimGroups
}

func (o *ListScimGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListScimGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
