// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type GetUnifiedIntegrationWorkspaceWorkspaceIDCategories string

const (
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesPassthrough GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "passthrough"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesHris        GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "hris"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesAts         GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "ats"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesAuth        GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "auth"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesCrm         GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "crm"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesEnrich      GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "enrich"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesMartech     GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "martech"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesTicketing   GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "ticketing"
	GetUnifiedIntegrationWorkspaceWorkspaceIDCategoriesUc          GetUnifiedIntegrationWorkspaceWorkspaceIDCategories = "uc"
)

func (e GetUnifiedIntegrationWorkspaceWorkspaceIDCategories) ToPointer() *GetUnifiedIntegrationWorkspaceWorkspaceIDCategories {
	return &e
}

func (e *GetUnifiedIntegrationWorkspaceWorkspaceIDCategories) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "passthrough":
		fallthrough
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "auth":
		fallthrough
	case "crm":
		fallthrough
	case "enrich":
		fallthrough
	case "martech":
		fallthrough
	case "ticketing":
		fallthrough
	case "uc":
		*e = GetUnifiedIntegrationWorkspaceWorkspaceIDCategories(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUnifiedIntegrationWorkspaceWorkspaceIDCategories: %v", v)
	}
}

type GetUnifiedIntegrationWorkspaceWorkspaceIDRequest struct {
	Active *bool `queryParam:"style=form,explode=true,name=active"`
	// Filter the results on these categories
	Categories []GetUnifiedIntegrationWorkspaceWorkspaceIDCategories `queryParam:"style=form,explode=true,name=categories"`
	Env        *string                                               `queryParam:"style=form,explode=true,name=env"`
	Summary    *bool                                                 `queryParam:"style=form,explode=true,name=summary"`
	// The ID of the workspace
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDRequest) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDRequest) GetCategories() []GetUnifiedIntegrationWorkspaceWorkspaceIDCategories {
	if o == nil {
		return nil
	}
	return o.Categories
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDRequest) GetEnv() *string {
	if o == nil {
		return nil
	}
	return o.Env
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDRequest) GetSummary() *bool {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDRequest) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

type GetUnifiedIntegrationWorkspaceWorkspaceIDResponse struct {
	ContentType string
	// Successful
	Integrations []shared.Integration
	StatusCode   int
	RawResponse  *http.Response
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDResponse) GetIntegrations() []shared.Integration {
	if o == nil {
		return nil
	}
	return o.Integrations
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUnifiedIntegrationWorkspaceWorkspaceIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
