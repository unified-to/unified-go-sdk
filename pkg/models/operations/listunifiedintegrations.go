// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/unified-to/unified-go-sdk/pkg/models/shared"
	"net/http"
)

type ListUnifiedIntegrationsQueryParamCategories string

const (
	ListUnifiedIntegrationsQueryParamCategoriesPassthrough  ListUnifiedIntegrationsQueryParamCategories = "passthrough"
	ListUnifiedIntegrationsQueryParamCategoriesHris         ListUnifiedIntegrationsQueryParamCategories = "hris"
	ListUnifiedIntegrationsQueryParamCategoriesAts          ListUnifiedIntegrationsQueryParamCategories = "ats"
	ListUnifiedIntegrationsQueryParamCategoriesAuth         ListUnifiedIntegrationsQueryParamCategories = "auth"
	ListUnifiedIntegrationsQueryParamCategoriesCrm          ListUnifiedIntegrationsQueryParamCategories = "crm"
	ListUnifiedIntegrationsQueryParamCategoriesEnrich       ListUnifiedIntegrationsQueryParamCategories = "enrich"
	ListUnifiedIntegrationsQueryParamCategoriesMartech      ListUnifiedIntegrationsQueryParamCategories = "martech"
	ListUnifiedIntegrationsQueryParamCategoriesTicketing    ListUnifiedIntegrationsQueryParamCategories = "ticketing"
	ListUnifiedIntegrationsQueryParamCategoriesUc           ListUnifiedIntegrationsQueryParamCategories = "uc"
	ListUnifiedIntegrationsQueryParamCategoriesAccounting   ListUnifiedIntegrationsQueryParamCategories = "accounting"
	ListUnifiedIntegrationsQueryParamCategoriesStorage      ListUnifiedIntegrationsQueryParamCategories = "storage"
	ListUnifiedIntegrationsQueryParamCategoriesCommerce     ListUnifiedIntegrationsQueryParamCategories = "commerce"
	ListUnifiedIntegrationsQueryParamCategoriesPayment      ListUnifiedIntegrationsQueryParamCategories = "payment"
	ListUnifiedIntegrationsQueryParamCategoriesGenai        ListUnifiedIntegrationsQueryParamCategories = "genai"
	ListUnifiedIntegrationsQueryParamCategoriesMessaging    ListUnifiedIntegrationsQueryParamCategories = "messaging"
	ListUnifiedIntegrationsQueryParamCategoriesKms          ListUnifiedIntegrationsQueryParamCategories = "kms"
	ListUnifiedIntegrationsQueryParamCategoriesTask         ListUnifiedIntegrationsQueryParamCategories = "task"
	ListUnifiedIntegrationsQueryParamCategoriesScim         ListUnifiedIntegrationsQueryParamCategories = "scim"
	ListUnifiedIntegrationsQueryParamCategoriesLms          ListUnifiedIntegrationsQueryParamCategories = "lms"
	ListUnifiedIntegrationsQueryParamCategoriesRepo         ListUnifiedIntegrationsQueryParamCategories = "repo"
	ListUnifiedIntegrationsQueryParamCategoriesMetadata     ListUnifiedIntegrationsQueryParamCategories = "metadata"
	ListUnifiedIntegrationsQueryParamCategoriesCalendar     ListUnifiedIntegrationsQueryParamCategories = "calendar"
	ListUnifiedIntegrationsQueryParamCategoriesVerification ListUnifiedIntegrationsQueryParamCategories = "verification"
)

func (e ListUnifiedIntegrationsQueryParamCategories) ToPointer() *ListUnifiedIntegrationsQueryParamCategories {
	return &e
}
func (e *ListUnifiedIntegrationsQueryParamCategories) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "passthrough":
		fallthrough
	case "hris":
		fallthrough
	case "ats":
		fallthrough
	case "auth":
		fallthrough
	case "crm":
		fallthrough
	case "enrich":
		fallthrough
	case "martech":
		fallthrough
	case "ticketing":
		fallthrough
	case "uc":
		fallthrough
	case "accounting":
		fallthrough
	case "storage":
		fallthrough
	case "commerce":
		fallthrough
	case "payment":
		fallthrough
	case "genai":
		fallthrough
	case "messaging":
		fallthrough
	case "kms":
		fallthrough
	case "task":
		fallthrough
	case "scim":
		fallthrough
	case "lms":
		fallthrough
	case "repo":
		fallthrough
	case "metadata":
		fallthrough
	case "calendar":
		fallthrough
	case "verification":
		*e = ListUnifiedIntegrationsQueryParamCategories(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUnifiedIntegrationsQueryParamCategories: %v", v)
	}
}

type ListUnifiedIntegrationsRequest struct {
	// Filter the results for only the workspace's active integrations
	Active *bool `queryParam:"style=form,explode=true,name=active"`
	// Filter the results on these categories
	Categories []ListUnifiedIntegrationsQueryParamCategories `queryParam:"style=form,explode=true,name=categories"`
	Env        *string                                       `queryParam:"style=form,explode=true,name=env"`
	Limit      *float64                                      `queryParam:"style=form,explode=true,name=limit"`
	Offset     *float64                                      `queryParam:"style=form,explode=true,name=offset"`
	Summary    *bool                                         `queryParam:"style=form,explode=true,name=summary"`
	// Filter the results for only this integration type
	Type       *string `queryParam:"style=form,explode=true,name=type"`
	UpdatedGte *string `queryParam:"style=form,explode=true,name=updated_gte"`
}

func (l *ListUnifiedIntegrationsRequest) GetActive() *bool {
	if l == nil {
		return nil
	}
	return l.Active
}

func (l *ListUnifiedIntegrationsRequest) GetCategories() []ListUnifiedIntegrationsQueryParamCategories {
	if l == nil {
		return nil
	}
	return l.Categories
}

func (l *ListUnifiedIntegrationsRequest) GetEnv() *string {
	if l == nil {
		return nil
	}
	return l.Env
}

func (l *ListUnifiedIntegrationsRequest) GetLimit() *float64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListUnifiedIntegrationsRequest) GetOffset() *float64 {
	if l == nil {
		return nil
	}
	return l.Offset
}

func (l *ListUnifiedIntegrationsRequest) GetSummary() *bool {
	if l == nil {
		return nil
	}
	return l.Summary
}

func (l *ListUnifiedIntegrationsRequest) GetType() *string {
	if l == nil {
		return nil
	}
	return l.Type
}

func (l *ListUnifiedIntegrationsRequest) GetUpdatedGte() *string {
	if l == nil {
		return nil
	}
	return l.UpdatedGte
}

type ListUnifiedIntegrationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Successful
	Integrations []shared.Integration
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListUnifiedIntegrationsResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListUnifiedIntegrationsResponse) GetIntegrations() []shared.Integration {
	if l == nil {
		return nil
	}
	return l.Integrations
}

func (l *ListUnifiedIntegrationsResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListUnifiedIntegrationsResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
